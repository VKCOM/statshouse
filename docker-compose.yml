version: "3.9"

services:
  metadata:
    profiles:
      - sh
      - api-off
    build:
      context: .
      dockerfile: build/statshouse-metadata.Dockerfile
      args:
        - BUILD_TRUSTED_SUBNET_GROUPS=0.0.0.0/0
    container_name: sh-metadata
    user: "root:root"
    command: --statshouse-addr=agent:13337 --db-path=/var/lib/statshouse/metadata/db --binlog-prefix=/var/lib/statshouse/metadata/binlog/bl
    volumes:
      - metadata:/var/lib/statshouse/metadata
    ports:
      - "2442:2442"
  kh:
    profiles:
      - sh
      - kh
      - api-off
    build:
      context: .
      dockerfile: build/clickhouse.Dockerfile
    container_name: kh
    hostname: localhost
    volumes:
      - kh:/var/lib/clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query='SELECT 1'"]
      interval: 200ms
      timeout: 1s
      retries: 1500
  aggregator:
    profiles:
      - sh
      - api-off
    build:
      context: .
      dockerfile: build/statshouse.Dockerfile
      args:
        - BUILD_TRUSTED_SUBNET_GROUPS=0.0.0.0/0
    container_name: sh-aggregator
    user: "root:root"
    command: aggregator -u=root -g=root --cluster=test_shard_localhost --log-level=trace --agg-addr=':13336' --kh=kh:8123 --metadata-addr=metadata:2442 --auto-create --cache-dir=/var/lib/statshouse/cache/aggregator
    ports:
      - "13336:13336"
    depends_on:
      kh:
        condition: service_healthy
  agent:
    profiles:
      - sh
      - api-off
    build:
      context: .
      dockerfile: build/statshouse.Dockerfile
      args:
        - BUILD_TRUSTED_SUBNET_GROUPS=0.0.0.0/0
    container_name: sh-agent
    user: "root:root"
    command: agent -u=root -g=root --cluster=test_shard_localhost --log-level=trace --agg-addr='aggregator:13336,aggregator:13336,aggregator:13336' --cache-dir=/var/lib/statshouse/cache/agent --remote-write-enabled
    expose:
      - 8081
    ports:
      - "13337:13337/udp"
      - "13337:13337/tcp"
    depends_on:
      - aggregator
  api:
    profiles:
      - sh
    build:
      context: .
      dockerfile: build/statshouse-api.Dockerfile
      args:
        - BUILD_TRUSTED_SUBNET_GROUPS=0.0.0.0/0
    container_name: sh-api
    user: "root:root"
    command: --verbose --local-mode --access-log --clickhouse-v1-addrs= --clickhouse-v2-addrs=kh:9000 --listen-addr=:10888 --metadata-addr=metadata:2442 --statshouse-addr=agent:13337 --disk-cache=/var/lib/statshouse/cache/api/mapping_cache.sqlite3
    ports:
      - "10888:10888"
    depends_on:
      kh:
        condition: service_healthy
  all-in-one:
    profiles:
      - all-in-one
    build:
      context: .
      dockerfile: build/all-in-one.Dockerfile
    container_name: sh
    user: "root:root"
    ports:
      - "2442:2442"
      - "8123:8123"
      - "9000:9000"
      - "10888:10888"
      - "13336:13336"
      - "13337:13337/udp"
      - "13337:13337/tcp"
    volumes:
      - metadata:/var/lib/statshouse/metadata
      - kh:/var/lib/clickhouse
  all-but-aggregator:
    profiles:
      - aggregator-off
    build:
      context: .
      dockerfile: build/all-in-one.Dockerfile
    container_name: sh
    user: "root:root"
    environment:
      - AGGREGATOR_OFF=1
    expose:
      - 2442
      - 8123
      - 9000
      - 10888
      - 13337/udp
      - 13337/tcp
    network_mode: host
    volumes:
      - metadata:/var/lib/statshouse/metadata
      - kh:/var/lib/clickhouse
  all-but-agent:
    profiles:
      - agent-off
    build:
      context: .
      dockerfile: build/all-in-one.Dockerfile
    container_name: sh
    user: "root:root"
    environment:
      - AGENT_OFF=1
    expose:
      - 2442
      - 8123
      - 9000
      - 10888
      - 13336
    network_mode: host
    volumes:
      - metadata:/var/lib/statshouse/metadata
      - kh:/var/lib/clickhouse
  grafana:
    profiles:
      - api-dev
    image: grafana/grafana-oss
    container_name: grafana
    volumes:
      - grafana:/var/lib/grafana
    expose:
      - 3000
    network_mode: host
  prometheus:
    profiles:
      - api-dev
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prometheus:/prometheus
      - ${PWD}/build/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

volumes:
  kh:
  metadata:
  prometheus:
  grafana:
