--- clickhouse.sql	2022-11-22 17:47:14.683940148 +0300
+++ clickhouse.sql.bak	2022-11-22 17:43:23.096692657 +0300
@@ -34,7 +34,9 @@
 (`insert_time` DateTime,
  `time` DateTime,
  `count` SimpleAggregateFunction(sum, Float64))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toStartOfInterval(insert_time, INTERVAL 6 hour)
+ORDER BY (insert_time, time);
 
 CREATE TABLE IF NOT EXISTS statshouse_internal_log
 (`time` DateTime,
@@ -77,7 +79,9 @@
  `key4` String,
  `key5` String,
  `message` String)
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toYYYYMM(time)
+ORDER BY (time, host, type, key0, key1, key2, key3, key4, key5);
 
 CREATE TABLE IF NOT EXISTS statshouse_metric_1d
 (`metric` Int32,
@@ -126,7 +130,8 @@
  `time` DateTime,
  `row_count` SimpleAggregateFunction(sum, Float64),
  `count` SimpleAggregateFunction(sum, Float64))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+ORDER BY (metric, time);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_1h
 (`metric` Int32,
@@ -360,7 +365,9 @@
  `uniq_state` AggregateFunction(uniq, Int64),
  `min_host` AggregateFunction(argMin, Int32, Float32),
  `max_host` AggregateFunction(argMax, Int32, Float32))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toYYYYMM(time)
+ORDER BY (metric, time, key0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, key13, key14, key15, skey);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_1h_prekey
 (`metric` Int32,
@@ -428,7 +435,9 @@
  `uniq_state` AggregateFunction(uniq, Int64),
  `min_host` AggregateFunction(argMin, Int32, Float32),
  `max_host` AggregateFunction(argMax, Int32, Float32))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toYYYYMM(time)
+ORDER BY (metric, prekey, time, key0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, key13, key14, key15, skey);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_1m
 (`metric` Int32,
@@ -662,7 +671,9 @@
  `uniq_state` AggregateFunction(uniq, Int64),
  `min_host` AggregateFunction(argMin, Int32, Float32),
  `max_host` AggregateFunction(argMax, Int32, Float32))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toDate(time)
+ORDER BY (metric, time, key0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, key13, key14, key15, skey);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_1m_prekey
 (`metric` Int32,
@@ -730,7 +741,9 @@
  `uniq_state` AggregateFunction(uniq, Int64),
  `min_host` AggregateFunction(argMin, Int32, Float32),
  `max_host` AggregateFunction(argMax, Int32, Float32))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toDate(time)
+ORDER BY (metric, prekey, time, key0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, key13, key14, key15, skey);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_1s
 (`metric` Int32,
@@ -897,7 +910,9 @@
  `uniq_state` AggregateFunction(uniq, Int64),
  `min_host` AggregateFunction(argMin, Int32, Float32),
  `max_host` AggregateFunction(argMax, Int32, Float32))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toStartOfInterval(time, INTERVAL 6 hour)
+ORDER BY (metric, time, key0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, key13, key14, key15, skey);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_1s_prekey
 (`metric` Int32,
@@ -965,7 +980,9 @@
  `uniq_state` AggregateFunction(uniq, Int64),
  `min_host` AggregateFunction(argMin, Int32, Float32),
  `max_host` AggregateFunction(argMax, Int32, Float32))
-ENGINE = AggregatingMergeTree();
+ENGINE = AggregatingMergeTree()
+PARTITION BY toStartOfInterval(time, INTERVAL 6 hour)
+ORDER BY (metric, prekey, time, key0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, key13, key14, key15, skey);
 
 CREATE TABLE IF NOT EXISTS statshouse_value_incoming
 (`time` DateTime,
