"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5990],{9154:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>h,default:()=>p,frontMatter:()=>d,metadata:()=>c,toc:()=>m});var t=n(5893),i=n(1151);const a=n.p+"assets/images/t-aggregation-28bf9a6a1d5c21fa08d1bed9d1897efb.png",r=n.p+"assets/images/t-cardinality-7d6f434b222209f6156a8267f83d5dda.png",o=n.p+"assets/images/t-sf-6098ac39708d8c43875f5c0764058a49.png",l=n.p+"assets/images/t-sf-result-788d31a5ee543894bc780176afbb4065.png",d={sidebar_position:2,title:"TLDR"},h="TLDR",c={id:"tldr",title:"TLDR",description:'The main StatsHouse feature is the ability to "digest" as much data as you need and to display it in real time.',source:"@site/docs/tldr.md",sourceDirName:".",slug:"/tldr",permalink:"/statshouse/tldr",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"TLDR"},sidebar:"tutorialSidebar",previous:{title:"What is StatsHouse?",permalink:"/statshouse/"},next:{title:"Quick start",permalink:"/statshouse/quick-start"}},u={},m=[{value:"Aggregation",id:"aggregation",level:2},{value:"Cardinality",id:"cardinality",level:2},{value:"Sampling",id:"sampling",level:2},{value:"StatsHouse does not guarantee the absence of sampling",id:"statshouse-does-not-guarantee-the-absence-of-sampling",level:3},{value:"How to minimize sampling",id:"how-to-minimize-sampling",level:3},{value:"Things that do not minimize sampling",id:"things-that-do-not-minimize-sampling",level:3},{value:"Why StatsHouse cannot guarantee the absence of sampling",id:"why-statshouse-cannot-guarantee-the-absence-of-sampling",level:3}];function g(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"tldr",children:"TLDR"}),"\n",(0,t.jsxs)(s.p,{children:['The main StatsHouse feature is the ability to "digest" as much data as you need and to display it in real time.\nIt is possible due to ',(0,t.jsx)(s.strong,{children:"aggregation"})," and ",(0,t.jsx)(s.strong,{children:"sampling"}),': StatsHouse has to "compress" and (sometimes) to discard data.']}),"\n",(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsx)(s.p,{children:"You can't get rid of sampling in general. And most of the time you don't need to."})}),"\n",(0,t.jsx)(s.p,{children:"To see whether StatsHouse suits you well, have a quick glance at its basic concepts and mechanisms. They are\ndescribed below \u2014 in a couple of words and pictures:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#aggregation",children:"Aggregation"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#cardinality",children:"Cardinality"})}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"#sampling",children:"Sampling"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#statshouse-does-not-guarantee-the-absence-of-sampling",children:"StatsHouse does not guarantee the absence of sampling"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#how-to-minimize-sampling",children:"How to minimize sampling"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#things-that-do-not-minimize-sampling",children:"Things that do not minimize sampling"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"aggregation",children:"Aggregation"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["Learn more about ",(0,t.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregation",children:(0,t.jsx)(s.strong,{children:"aggregation"})})," in the conceptual overview. This is just the\nTLDR."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:['StatsHouse "collapses" rows of data ',(0,t.jsx)(s.strong,{children:"with the same tag values"}),". The counters are summed up."]}),"\n",(0,t.jsx)("img",{src:a,width:"800"}),"\n",(0,t.jsxs)(s.p,{children:["StatsHouse does NOT store an exact metric value per each moment. It stores the general statistics (",(0,t.jsx)(s.em,{children:"aggregate"})," =\n",(0,t.jsx)(s.em,{children:"count"}),", ",(0,t.jsx)(s.em,{children:"sum"}),", ",(0,t.jsx)(s.em,{children:"min"}),", ",(0,t.jsx)(s.em,{children:"max"}),") for a time interval."]}),"\n",(0,t.jsx)(s.p,{children:"The maximum resolution is one second. Per-second data is available for two days, then the resolution decreases (to\nminutes and hours)."}),"\n",(0,t.jsx)(s.h2,{id:"cardinality",children:"Cardinality"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["Learn more about ",(0,t.jsx)(s.a,{href:"/statshouse/overview/concepts#cardinality",children:(0,t.jsx)(s.strong,{children:"cardinality"})})," in the conceptual overview. This is just the\nTLDR."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"High cardinality"})," data is data with many different tag values. It is poorly aggregated, takes up a lot of space \u2014\nStatsHouse has to sample it."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"Low cardinality"})," data is aggregated (compressed) well, and StatsHouse usually does not have to sample it."]}),"\n",(0,t.jsx)("img",{src:r,width:"800"}),"\n",(0,t.jsx)(s.h2,{id:"sampling",children:"Sampling"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["Learn more about ",(0,t.jsx)(s.a,{href:"/statshouse/overview/concepts#sampling",children:(0,t.jsx)(s.strong,{children:"sampling"})})," in the conceptual overview. This is just the TLDR."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["When the loads are too high, StatsHouse samples data \u2014 throws away random data ",(0,t.jsx)(s.strong,{children:"rows"}),". It multiplies the sums and\ncounts in the remaining rows by a sampling coefficient to preserve the average statistics."]}),"\n",(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"StatsHouse does not guarantee the absence of sampling."})})}),"\n",(0,t.jsx)("img",{src:o,width:"800"}),"\n",(0,t.jsx)("img",{src:l,width:"800"}),"\n",(0,t.jsx)(s.p,{children:"In most cases, users do not worry about sampling. And it still protects StatsHouse from overload."}),"\n",(0,t.jsx)(s.h3,{id:"statshouse-does-not-guarantee-the-absence-of-sampling",children:"StatsHouse does not guarantee the absence of sampling"}),"\n",(0,t.jsx)(s.p,{children:"You can't get rid of sampling in general. StatsHouse is designed to be a communal cluster: the resource is shared\nfairly between the tenants."}),"\n",(0,t.jsxs)(s.p,{children:["The tenant's resource is the share of total resource. If the total resource has already been shared between the\ntenants in your organization and there are no more new ones, the tenants' metrics will not interfere with each\nother, so you can try to ",(0,t.jsx)(s.a,{href:"#how-to-minimize-sampling",children:"minimize sampling"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"When scaling the system (adding new demanding tenants) the actual budget in bytes may decrease. In real\norganizations, one should increase the total resource by scaling the physical cluster."}),"\n",(0,t.jsx)(s.h3,{id:"how-to-minimize-sampling",children:"How to minimize sampling"}),"\n",(0,t.jsx)(s.p,{children:"StatsHouse samples data when you send more metric data than allowed. You can either decrease the amount of data sent\n(1\u20133), or increase the budget (4)."}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.em,{children:"Minimize cardinality"})," \u2014\n",(0,t.jsx)(s.a,{href:"/statshouse/guides/design-metric#how-many-tag-values",children:"the number of tag values"}),".\nIt is not the number of tags that matters. The number of tag values is what you should care about."]}),"\n"]}),"\n",(0,t.jsxs)(s.admonition,{type:"tip",children:[(0,t.jsxs)(s.p,{children:["Do not use ",(0,t.jsx)(s.code,{children:"userID"})," or ",(0,t.jsx)(s.code,{children:"hostname"})," as tag values. Use larger categories."]}),(0,t.jsxs)(s.p,{children:["Categorize users by a ",(0,t.jsx)(s.em,{children:"region"}),", ",(0,t.jsx)(s.em,{children:"platform"}),", etc. \u2014 not by their personal IDs."]}),(0,t.jsxs)(s.p,{children:["Categorize hosts by a ",(0,t.jsx)(s.em,{children:"datacenter"}),", a ",(0,t.jsx)(s.em,{children:"cluster"}),", etc. \u2014 not by their names."]})]}),"\n",(0,t.jsxs)(s.ol,{start:"2",children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.em,{children:"Consider the metric type"})," \u2014 it influences the amount of data sent:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.a,{href:"/statshouse/guides/design-metric#counters",children:[(0,t.jsx)(s.em,{children:"counter"})," metrics"]})," takes up less space than\n",(0,t.jsxs)(s.a,{href:"/statshouse/guides/design-metric#value-metrics",children:[(0,t.jsx)(s.em,{children:"value"})," metrics"]}),";"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.a,{href:"/statshouse/guides/edit-metrics#percentiles",children:["enabling ",(0,t.jsx)(s.em,{children:"percentiles"})]})," increases the amount of data sent \u2014 it may lead to\nincreased sampling."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.em,{children:"Reduce the metric resolution"}),". Learn ",(0,t.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#resolution",children:"how to customize resolution"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.em,{children:"Increase the budget"}),". Only administrators are allowed to ",(0,t.jsx)(s.a,{href:"/statshouse/admin/manage-budgets",children:"manage budgets"})," for\nspecific metrics (as well as groups and namespaces). Use this option sparingly."]}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{type:"tip",children:(0,t.jsxs)(s.p,{children:["You can ",(0,t.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#fair-key-tags",children:'enable the "Fair key tags" feature'})," to share the budget fairly\nbetween the services sending data to the same metric.\nRead more about ",(0,t.jsx)(s.a,{href:"/statshouse/overview/concepts#tag-level-budgeting-fair-key-tags",children:"tag-level budgeting"}),"."]})}),"\n",(0,t.jsx)(s.h3,{id:"things-that-do-not-minimize-sampling",children:"Things that do not minimize sampling"}),"\n",(0,t.jsx)(s.p,{children:"If you send a lot of rows and start writing less data to the same rows, the sampling rate will not reduce."}),"\n",(0,t.jsxs)(s.p,{children:["Imagine you send two data rows: ",(0,t.jsx)(s.code,{children:"[a=1, b=2]"})," \u0438 ",(0,t.jsx)(s.code,{children:"[a=1, b=3]"})," \u2014 they are different rows because they contain\ndifferent tag values. It does not matter if you write four values or one million values to these rows (it works for\n",(0,t.jsx)(s.em,{children:"counter"})," and ",(0,t.jsx)(s.em,{children:"value"})," types). But if your metric generates ",(0,t.jsx)(s.strong,{children:"two million rows per second"}),", they ",(0,t.jsx)(s.strong,{children:"will likely be\nsampled"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"why-statshouse-cannot-guarantee-the-absence-of-sampling",children:"Why StatsHouse cannot guarantee the absence of sampling"}),"\n",(0,t.jsx)(s.p,{children:"You can't get rid of sampling in general. StatsHouse is designed to work as a communal cluster: the resource is\nfairly distributed among tenants."}),"\n",(0,t.jsxs)(s.p,{children:["The resource allocated to a tenant is the fixed percentage of the total resource.\nIf the resource in your organization has already been distributed among tenants and there are no new ones, then\ntenants will not interfere with each other, and it is even possible to empirically ",(0,t.jsx)(s.a,{href:"#how-to-minimize-sampling",children:"minimize sampling"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"Upon scaling (when new tenants appear), the actual budget in bytes may decrease. To solve this problem in the real\norganization, one should increase the total budget, i.e., physically scale up the cluster."})]})}function p(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>r});var t=n(7294);const i={},a=t.createContext(i);function r(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);