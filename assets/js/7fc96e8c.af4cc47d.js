"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[806],{2682:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=t(5893),r=t(1151);const i={sidebar_position:7},a="Query with PromQL",o={id:"guides/query-wth-promql",title:"Query with PromQL",description:"This section tells you about using PromQL with StatsHouse:",source:"@site/docs/guides/query-wth-promql.md",sourceDirName:"guides",slug:"/guides/query-wth-promql",permalink:"/statshouse/guides/query-wth-promql",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Edit a metric",permalink:"/statshouse/guides/edit-metrics"},next:{title:"Find OpenAPI specification",permalink:"/statshouse/guides/openapi"}},h={},d=[{value:"What is PromQL?",id:"what-is-promql",level:2},{value:"How to switch to a PromQL query editor",id:"how-to-switch-to-a-promql-query-editor",level:2},{value:"What is specific about PromQL in StatsHouse?",id:"what-is-specific-about-promql-in-statshouse",level:2},{value:"The query result is an aggregate",id:"the-query-result-is-an-aggregate",level:3},{value:"<em><strong>what</strong></em> for choosing the aggregate components",id:"what-for-choosing-the-aggregate-components",level:3},{value:"Histograms are <em>t-digests</em>",id:"histograms-are-t-digests",level:3},{value:"No data grouping by default",id:"no-data-grouping-by-default",level:3},{value:"PromQL extensions in StatsHouse",id:"promql-extensions-in-statshouse",level:2},{value:"<em><strong>what</strong></em> and <em><strong>by</strong></em>",id:"what-and-by",level:3},{value:"Applying dashboard variables",id:"applying-dashboard-variables",level:3},{value:"Range vectors and instant vectors",id:"range-vectors-and-instant-vectors",level:3},{value:"<em>Prefix sum</em>",id:"prefix-sum",level:3},{value:"<em>default</em>",id:"default",level:3}];function l(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"query-with-promql",children:"Query with PromQL"}),"\n",(0,n.jsx)(s.p,{children:"This section tells you about using PromQL with StatsHouse:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#what-is-promql",children:"What is PromQL?"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#how-to-switch-to-a-promql-query-editor",children:"How to switch to a PromQL query editor"})}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"#what-is-specific-about-promql-in-statshouse",children:"What is specific about PromQL in StatsHouse?"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#the-query-result-is-an-aggregate",children:"The query result is an aggregate"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"#what-for-choosing-the-aggregate-components",children:[(0,n.jsx)(s.code,{children:"__what__"})," for choosing the aggregate components"]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"#histograms-are-t-digests",children:["Histograms are ",(0,n.jsx)(s.em,{children:"t-digests"})]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#no-data-grouping-by-default",children:"No data grouping by default"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"#promql-extensions-in-statshouse",children:"PromQL extensions in StatsHouse"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"#what-and-by",children:[(0,n.jsx)(s.code,{children:"__what__"})," and ",(0,n.jsx)(s.code,{children:"__by__"})]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#applying-dashboard-variables",children:"Applying dashboard variables"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#range-vectors-and-instant-vectors",children:"Range vectors and instant vectors"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#prefix-sum",children:(0,n.jsx)(s.code,{children:"prefix_sum"})})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#default",children:(0,n.jsx)(s.code,{children:"default"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"what-is-promql",children:"What is PromQL?"}),"\n",(0,n.jsx)(s.p,{children:"PromQL is the Prometheus Query Language that lets the user select time series data."}),"\n",(0,n.jsx)(s.p,{children:"Why have we decided to support querying with PromQL in StatsHouse?\nWe wanted to broaden the range of things the users could do with data in StatsHouse.\nPromQL provides users with the necessary operations, it is widely used and well-documented."}),"\n",(0,n.jsxs)(s.p,{children:["Find the original ",(0,n.jsx)(s.a,{href:"https://prometheus.io/docs/prometheus/latest/querying/basics/",children:"PromQL documentation"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"how-to-switch-to-a-promql-query-editor",children:"How to switch to a PromQL query editor"}),"\n",(0,n.jsxs)(s.p,{children:["To switch to the PromQL query editor in StatsHouse, press the ",(0,n.jsx)(s.code,{children:"< >"})," button near the ",(0,n.jsx)(s.em,{children:"Metric name"})," field.\nFind more about the ",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#18--promql-query-editor",children:"PromQL query editor in the UI"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"what-is-specific-about-promql-in-statshouse",children:"What is specific about PromQL in StatsHouse?"}),"\n",(0,n.jsx)(s.p,{children:"If you have been using PromQL before, you may be confused with some PromQL implementation details in StatsHouse.\nLet's make them clear."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"#the-query-result-is-an-aggregate",children:"The query result is an aggregate"}),"\u2014not an exact metric value per moment."]}),"\n",(0,n.jsxs)(s.li,{children:["You can ",(0,n.jsx)(s.a,{href:"#what-for-choosing-the-aggregate-components",children:"choose the aggregate components"})," using the ",(0,n.jsx)(s.code,{children:"__what__"})," selector."]}),"\n",(0,n.jsxs)(s.li,{children:["StatsHouse ",(0,n.jsxs)(s.a,{href:"#histograms-are-t-digests",children:["histograms are ",(0,n.jsx)(s.em,{children:"t-digests"})]}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["StatsHouse ",(0,n.jsx)(s.a,{href:"#no-data-grouping-by-default",children:"does not group data by default"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"the-query-result-is-an-aggregate",children:"The query result is an aggregate"}),"\n",(0,n.jsxs)(s.p,{children:["Prometheus stores ",(0,n.jsx)(s.code,{children:"timestamp\u2014value"})," pairs. Instead, StatsHouse stores aggregated data per time intervals, or\n",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregate",children:(0,n.jsx)(s.em,{children:"aggregates"})}),"."]}),"\n",(0,n.jsx)(s.p,{children:"So, the query result in StatsHouse is an aggregate, and it depends on"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["the ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#minimal-available-aggregation-interval",children:(0,n.jsx)(s.em,{children:"minimal available aggregation interval"})}),'\n(i.e., on the "age" of the data),']}),"\n",(0,n.jsxs)(s.li,{children:["the ",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#6--aggregation-interval",children:(0,n.jsx)(s.em,{children:"requested aggregation interval"})}),","]}),"\n",(0,n.jsxs)(s.li,{children:["the metric ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#resolution",children:(0,n.jsx)(s.em,{children:"resolution"})}),"."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["An ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregate",children:"aggregate"})," contains the ",(0,n.jsx)(s.em,{children:"count"}),", ",(0,n.jsx)(s.em,{children:"sum"}),", ",(0,n.jsx)(s.em,{children:"min"}),", ",(0,n.jsx)(s.em,{children:"max"}),"\nstatistics, and, optionally, the ",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#string-top-tag",children:(0,n.jsx)(s.em,{children:"String top"})})," tag (",(0,n.jsx)(s.code,{children:"tag_s"}),")\nand ",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#percentiles",children:"percentiles"})," (if enabled).\nThey are ",(0,n.jsx)(s.em,{children:"aggregate components"}),":"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"tag_1"}),(0,n.jsx)(s.th,{children:"tag_2"}),(0,n.jsx)(s.th,{children:"tag_s"}),(0,n.jsx)(s.th,{children:"count"}),(0,n.jsx)(s.th,{children:"sum"}),(0,n.jsx)(s.th,{children:"min"}),(0,n.jsx)(s.th,{children:"max"}),(0,n.jsx)(s.th,{children:"percentiles"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_metric"}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."}),(0,n.jsx)(s.td,{children:"..."})]})})]}),"\n",(0,n.jsxs)(s.p,{children:["Read more about ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregation",children:"aggregation"})," in StatsHouse."]}),"\n",(0,n.jsxs)(s.h3,{id:"what-for-choosing-the-aggregate-components",children:[(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"what"})})," for choosing the aggregate components"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["In Prometheus, you can query the exact values. In Prometheus ",(0,n.jsx)(s.code,{children:"timestamp\u2014value"})," pairs, the\nvalue is the floating-point number associated with a moment in time."]}),"\n",(0,n.jsx)(s.li,{children:"In StatsHouse, you can query the aggregates associated with time intervals."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["To query the aggregate components, use the  ",(0,n.jsx)(s.code,{children:"__what__"})," selector. The possible values are:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'"avg"\n"count"\n"countsec"\n"max"\n"min"\n"sum"\n"sumsec"\n"stddev"\n"stdvar"\n"p25"\n"p50"\n"p75"\n"p90"\n"p95"\n"p99"\n"p999"\n"cardinality"\n"cardinalitysec"\n"unique"\n"uniquesec"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["They are the ",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#3--descriptive-statistics",children:"descriptive statistics"}),' you see in the StatsHouse UI.\nThe "sec" postfix means that the value is normalized\u2014divided by the aggregation interval in seconds.']}),"\n",(0,n.jsxs)(s.p,{children:["For example, this selector returns the counter for the ",(0,n.jsx)(s.code,{children:"api_methods"})," metric associated with the aggregation interval:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'api_methods{__what__="count"}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["If the  ",(0,n.jsx)(s.code,{children:"__what__"})," selector is not specified, StatsHouse tries to guess based on the PromQL functions you use in your\nquery:"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"PromQL functions"}),(0,n.jsx)(s.th,{children:"StatsHouse interpretation"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:['"increase"',(0,n.jsx)("br",{}),'"irate"',(0,n.jsx)("br",{}),'"rate"',(0,n.jsx)("br",{}),'"resets"']}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'__what__="count"'})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:['"delta"',(0,n.jsx)("br",{}),'"deriv"',(0,n.jsx)("br",{}),'"holt_winters"',(0,n.jsx)("br",{}),'"idelta"',(0,n.jsx)("br",{}),'"predict_linear"']}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'__what__="avg"'})})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["For example, this query returns the ",(0,n.jsx)(s.code,{children:"api_methods"})," metric's counter rate for five minutes:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"rate(api_methods[5m])\n"})}),"\n",(0,n.jsxs)(s.p,{children:["If StatsHouse fails to guess, it returns the counter for the ",(0,n.jsxs)(s.a,{href:"/statshouse/guides/design-metric#counters",children:[(0,n.jsx)(s.em,{children:"counter"})," metrics"]}),"\nand the average (the sum divided by the counter) for the ",(0,n.jsxs)(s.a,{href:"/statshouse/guides/design-metric#value-metrics",children:[(0,n.jsx)(s.em,{children:"value"})," metrics"]}),"."]}),"\n",(0,n.jsxs)(s.h3,{id:"histograms-are-t-digests",children:["Histograms are ",(0,n.jsx)(s.em,{children:"t-digests"})]}),"\n",(0,n.jsxs)(s.p,{children:['Prometheus provides you with "traditional" and "native" histograms. StatsHouse will soon support the\n"traditional" ones. More details will be provided when the\n',(0,n.jsx)(s.a,{href:"/statshouse/admin/migrating#how-to-migrate-from-prometheus",children:"scraping"})," feature is implemented. Now it is recommended to\nuse StatsHouse histograms."]}),"\n",(0,n.jsxs)(s.p,{children:["StatsHouse stores histograms in the ",(0,n.jsx)(s.em,{children:"t-digest"})," structure but does not provide them by default\u2014you should\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#percentiles",children:"enable writing percentiles"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["To get access to percentiles (if enabled), specify the necessary one in the ",(0,n.jsx)(s.code,{children:"__what__"})," selector:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'"p25"\n"p50"\n"p75"\n"p90"\n"p95"\n"p99"\n"p999"\n'})}),"\n",(0,n.jsx)(s.p,{children:"For example, this expression returns the 99th percentile:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'api_methods{__what__="p99"}\n'})}),"\n",(0,n.jsx)(s.h3,{id:"no-data-grouping-by-default",children:"No data grouping by default"}),"\n",(0,n.jsx)(s.p,{children:"If you query data in Prometheus by a metric name, it returns all the data rows for this metric\u2014all label combinations."}),"\n",(0,n.jsxs)(s.p,{children:['On the contrary, StatsHouse returns the result of aggregation. For example, in StatsHouse, the "api_methods" query\nreturns the single row.\nTo group data by tags, specify the necessary ones using the ',(0,n.jsx)(s.code,{children:"__by__"})," PromQL operator."]}),"\n",(0,n.jsx)(s.h2,{id:"promql-extensions-in-statshouse",children:"PromQL extensions in StatsHouse"}),"\n",(0,n.jsx)(s.p,{children:"Find PromQL extensions implemented in StatsHouse."}),"\n",(0,n.jsxs)(s.h3,{id:"what-and-by",children:[(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"what"})})," and ",(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"by"})})]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"#what-for-choosing-the-aggregate-components",children:(0,n.jsx)(s.code,{children:"__what__"})})," and ",(0,n.jsx)(s.a,{href:"#no-data-grouping-by-default",children:(0,n.jsx)(s.code,{children:"__by__"})}),"\nselectors help to express any standard query in StatsHouse."]}),"\n",(0,n.jsx)(s.h3,{id:"applying-dashboard-variables",children:"Applying dashboard variables"}),"\n",(0,n.jsx)(s.p,{children:"To bind the tag to the previously created variable in your PromQL query, use the following syntax:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"tag_name:$variable_name"})}),"\n",(0,n.jsx)(s.p,{children:"The resulting query may look like this:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'topk(5,api_methods{@what="countsec",0:$env})'})}),"\n",(0,n.jsxs)(s.p,{children:["Find more about ",(0,n.jsx)(s.a,{href:"/statshouse/guides/dashboards#set-up-promql-based-dashboards",children:"setting up variables for PromQL-based graphs and dashboards"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"range-vectors-and-instant-vectors",children:"Range vectors and instant vectors"}),"\n",(0,n.jsx)(s.p,{children:"Functions for the range vectors receive instant vectors too. But the converse is false."}),"\n",(0,n.jsx)(s.h3,{id:"prefix-sum",children:(0,n.jsx)(s.em,{children:"Prefix sum"})}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"prefix_sum"})," function allows you to calculate a prefix sum. For example,\nfor a ",(0,n.jsx)(s.code,{children:"1, 2, 3, 4, 5, 6"})," sequence, it returns the following: ",(0,n.jsx)(s.code,{children:"1, 3, 6, 10, 15, 21"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"default",children:(0,n.jsx)(s.em,{children:"default"})}),"\n",(0,n.jsx)(s.p,{children:"It is a binary operator. It has an array on the left, and an array or a literal on the right."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["If it has the literal on the right, the ",(0,n.jsx)(s.code,{children:"NaN"})," values on the left are replaced with the literal."]}),"\n",(0,n.jsxs)(s.li,{children:["If it has the array on the right, the logic of mapping the arrays is the same as for the ",(0,n.jsx)(s.code,{children:"or"})," operator. The ",(0,n.jsx)(s.code,{children:"NaN"}),"\nvalues on the left are replaced with the corresponding values on the right."]}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>a});var n=t(7294);const r={},i=n.createContext(r);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);