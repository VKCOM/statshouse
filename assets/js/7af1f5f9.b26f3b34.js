"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[497],{3678:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>h,default:()=>x,frontMatter:()=>d,metadata:()=>o,toc:()=>l});var n=t(5893),i=t(1151);t.p;const r=t.p+"assets/images/ab-test-7bd6cad75c1de3f4a72986611aac4a0c.png";t(2808);var a=t(7444);const d={sidebar_position:2},h="Design your metric",o={id:"guides/design-metric",title:"Design your metric",description:"Understand what you want from your metric and how to implement it with StatsHouse:",source:"@site/docs/guides/design-metric.md",sourceDirName:"guides",slug:"/guides/design-metric",permalink:"/statshouse/guides/design-metric",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get access to StatsHouse",permalink:"/statshouse/guides/access-cluster"},next:{title:"Create a metric",permalink:"/statshouse/guides/create-metric"}},c={},l=[{value:"What are metrics in StatsHouse?",id:"what-are-metrics-in-statshouse",level:2},{value:"Metric types",id:"metric-types",level:2},{value:"Counters",id:"counters",level:3},{value:"Value metrics",id:"value-metrics",level:3},{value:"Sending regular values",id:"sending-regular-values",level:4},{value:"Unique counters",id:"unique-counters",level:3},{value:"Combining metric types",id:"combining-metric-types",level:3},{value:"Counters for value and unique metrics",id:"counters-for-value-and-unique-metrics",level:4},{value:"Tags",id:"tags",level:2},{value:"How many tags",id:"how-many-tags",level:3},{value:"&quot;What if I want more tags?&quot;",id:"what-if-i-want-more-tags",level:4},{value:"Tag names",id:"tag-names",level:3},{value:"Tag values",id:"tag-values",level:3},{value:"Length and characters",id:"length-and-characters",level:4},{value:"How many tag values",id:"how-many-tag-values",level:4},{value:"<em>Raw</em> tags",id:"raw-tags",level:3},{value:"String top tag",id:"string-top-tag",level:3},{value:"Host name as a tag",id:"host-name-as-a-tag",level:3},{value:"Customizing the <code>environment</code> tag",id:"customizing-the-environment-tag",level:3},{value:"Timestamps",id:"timestamps",level:2}];function u(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{Details:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"design-your-metric",children:"Design your metric"}),"\n",(0,n.jsx)(s.p,{children:"Understand what you want from your metric and how to implement it with StatsHouse:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#what-are-metrics-in-statshouse",children:"What are metrics in StatsHouse?"})}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"#metric-types",children:"Metric types"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#counters",children:"Counters"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#value-metrics",children:"Value metrics"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#unique-counters",children:"Unique counters"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#combining-metric-types",children:"Combining metric types"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"#tags",children:"Tags"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#how-many-tags",children:"How many tags"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#tag-names",children:"Tag names"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#tag-values",children:"Tag values"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"#raw-tags",children:[(0,n.jsx)(s.em,{children:"Raw"})," tags"]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#string-top-tag",children:"String top tag"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#host-name-as-a-tag",children:"Host name as a tag"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"#customizing-the-environment-tag",children:["Customizing the ",(0,n.jsx)(s.code,{children:"environment"})," tag"]})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#timestamps",children:"Timestamps"})}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Then ",(0,n.jsx)(s.a,{href:"/statshouse/guides/create-metric",children:"create a metric"})," and start ",(0,n.jsx)(s.a,{href:"/statshouse/guides/send-data",children:"sending data"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"what-are-metrics-in-statshouse",children:"What are metrics in StatsHouse?"}),"\n",(0,n.jsxs)(s.p,{children:['By "monitoring," we mean getting statistical data.\nA ',(0,n.jsx)(s.em,{children:"metric"})," is the minimal unit for setting up, collecting, and viewing statistics."]}),"\n",(0,n.jsx)(s.p,{children:"A metric structure in StatsHouse looks like this:"}),"\n",(0,n.jsx)("img",{src:a.Z,width:"800"}),"\n",(0,n.jsxs)(s.p,{children:["Here, ",(0,n.jsx)(s.code,{children:"counter"}),", ",(0,n.jsx)(s.code,{children:"value"}),", and ",(0,n.jsx)(s.code,{children:"unique"})," are basic metric types in StatsHouse."]}),"\n",(0,n.jsxs)(s.admonition,{type:"important",children:[(0,n.jsxs)(s.p,{children:["StatsHouse ",(0,n.jsx)(s.strong,{children:"does not"})," store an exact metric value per each moment."]}),(0,n.jsxs)(s.p,{children:["It stores ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregation",children:"aggregates"})," associated with time intervals."]})]}),"\n",(0,n.jsx)(s.h2,{id:"metric-types",children:"Metric types"}),"\n",(0,n.jsx)(s.p,{children:"You can measure same things in different ways\u2014they are metric types."}),"\n",(0,n.jsx)(s.p,{children:"See the table below for definitions and examples:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Metric type"}),(0,n.jsx)(s.th,{children:"What does it measure?"}),(0,n.jsx)(s.th,{children:"Examples"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"counter"})}),(0,n.jsx)(s.td,{children:"It counts the number of times an event has occurred."}),(0,n.jsxs)(s.td,{children:["The number of API method calls",(0,n.jsx)("br",{}),"The number of requests to a server",(0,n.jsx)("br",{}),"The number of errors received while sending messages"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"value"})}),(0,n.jsxs)(s.td,{children:["It measures magnitude of a parameter.",(0,n.jsx)("br",{}),"A measurement event itself is counted as well."]}),(0,n.jsxs)(s.td,{children:["How long does it take ",(0,n.jsx)("br",{}),"for a service to generate a newsfeed?",(0,n.jsx)("br",{}),"What is CPU usage for this host?",(0,n.jsx)("br",{}),"What is the response size (in bytes)?"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"unique"})}),(0,n.jsxs)(s.td,{children:["It counts the number of unique events.",(0,n.jsx)("br",{}),"The total number of events is counted as well."]}),(0,n.jsx)(s.td,{children:"The number of unique users who sent packages to a service"})]})]})]}),"\n",(0,n.jsxs)(s.admonition,{type:"important",children:[(0,n.jsxs)(s.p,{children:["A metric type affects the range of\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#3--descriptive-statistics",children:"descriptive statistics"})," available for your metric to view\nand analyze. For example, percentiles are available for ",(0,n.jsx)(s.em,{children:"values"})," only.\nOr you cannot view the cumulative graph for ",(0,n.jsx)(s.em,{children:"uniques"}),"."]}),(0,n.jsxs)(s.p,{children:["See more about ",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#percentiles",children:"enabling percentiles"}),"\nand ",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#aggregation",children:"showing descriptive statistics"})," in the UI."]})]}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.p,{children:["Metric types should not be confused with ",(0,n.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Data_type",children:"data types"})," in programming\nlanguages."]})}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"Implementation details"}),(0,n.jsxs)("p",{children:["Counter and value metrics are ",(0,n.jsx)(s.code,{children:"float64"}),". When StatsHouse receives metric data of a ",(0,n.jsx)(s.code,{children:"counter"})," or ",(0,n.jsx)(s.code,{children:"value"})," type,\nit trims everything outside the ",(0,n.jsx)(s.code,{children:"[-max(float32)..max(float32)]"})," range.\nThus, you avoid getting positive or negative infinity (",(0,n.jsx)(s.code,{children:"\xb1inf"}),") while summarizing values\u2014in the database as well."]})]}),"\n",(0,n.jsx)(s.h3,{id:"counters",children:"Counters"}),"\n",(0,n.jsx)(s.p,{children:"Imagine a hypothetical product. For this product, we need to get the number of received packets per second.\nThe packets may have different formats and statuses."}),"\n",(0,n.jsx)(s.p,{children:"Each time an application receives a packet, it sends an event to StatsHouse:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{"metrics":[ {"name": "toy_packets_count",\n "tags":{"format": "JSON", "status": "ok"},\n "counter": 1}] }\n'})}),"\n",(0,n.jsx)(s.p,{children:"or"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{"metrics":[ {"name": "toy_packets_count",\n "tags":{"format": "TL", "status": "error_too_short"},\n "counter": 1} ]}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Let's represent an event as a row in a conventional database. Upon per-second\n",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregation",children:"aggregation"}),",\nwe'll get the table below\u2014for each tag value combination received, we get the row with the corresponding count:"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"format"}),(0,n.jsx)(s.th,{children:"status"}),(0,n.jsx)(s.th,{children:"counter"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_count"}),(0,n.jsx)(s.td,{children:"JSON"}),(0,n.jsx)(s.td,{children:"ok"}),(0,n.jsx)(s.td,{children:"100"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_count"}),(0,n.jsx)(s.td,{children:"TL"}),(0,n.jsx)(s.td,{children:"ok"}),(0,n.jsx)(s.td,{children:"200"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_count"}),(0,n.jsx)(s.td,{children:"TL"}),(0,n.jsx)(s.td,{children:"error_too_short"}),(0,n.jsx)(s.td,{children:"5"})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["The number of rows in such a table is a metric's ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#cardinality",children:"cardinality"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"value-metrics",children:"Value metrics"}),"\n",(0,n.jsx)(s.p,{children:"Suppose we want to monitor the size of the received packets. This is what our metric could look like:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{"metrics":[ {"name": "toy_packets_size",\n "tags":{"format": "JSON", "status": "ok"},\n "value": [150]} ]}\n'})}),"\n",(0,n.jsx)(s.p,{children:"or"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{"metrics":[ {"name": "toy_packets_size",\n "tags":{"format": "JSON", "status": "error_too_short"},\n "value": [0]} ]}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["When you use value metrics, StatsHouse calculates an ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#aggregation",children:"aggregate"}),"\nin addition to a counter: ",(0,n.jsx)(s.em,{children:"sum"}),", ",(0,n.jsx)(s.em,{children:"min"}),", ",(0,n.jsx)(s.em,{children:"max"}),"."]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"format"}),(0,n.jsx)(s.th,{children:"status"}),(0,n.jsx)(s.th,{children:"counter"}),(0,n.jsx)(s.th,{children:"sum"}),(0,n.jsx)(s.th,{children:"min"}),(0,n.jsx)(s.th,{children:"max"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_size"}),(0,n.jsx)(s.td,{children:"JSON"}),(0,n.jsx)(s.td,{children:"ok"}),(0,n.jsx)(s.td,{children:"100"}),(0,n.jsx)(s.td,{children:"13000"}),(0,n.jsx)(s.td,{children:"20"}),(0,n.jsx)(s.td,{children:"1200"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_size"}),(0,n.jsx)(s.td,{children:"TL"}),(0,n.jsx)(s.td,{children:"ok"}),(0,n.jsx)(s.td,{children:"200"}),(0,n.jsx)(s.td,{children:"7000"}),(0,n.jsx)(s.td,{children:"4"}),(0,n.jsx)(s.td,{children:"800"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_size"}),(0,n.jsx)(s.td,{children:"TL"}),(0,n.jsx)(s.td,{children:"error_too_short"}),(0,n.jsx)(s.td,{children:"5"}),(0,n.jsx)(s.td,{children:"10"}),(0,n.jsx)(s.td,{children:"0"}),(0,n.jsx)(s.td,{children:"8"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"The metric value is an array, so you can send several values at a time."}),"\n",(0,n.jsx)(s.h4,{id:"sending-regular-values",children:"Sending regular values"}),"\n",(0,n.jsxs)(s.p,{children:['If you need to record a value per second (a "water level"), the StatsHouse client libraries try to send each value\nin the middle of the calendar second.\n',(0,n.jsx)(s.a,{href:"/statshouse/overview/components#agent",children:"Agents"})," finalize the second in accordance to a calendar second.\nStatsHouse does not ensure that each second contains exactly one measurement but tries to make it more probable.\nIf you need to ensure this, add the ",(0,n.jsx)(s.a,{href:"#timestamps",children:"timestamp"})," explicitly."]}),"\n",(0,n.jsx)(s.h3,{id:"unique-counters",children:"Unique counters"}),"\n",(0,n.jsxs)(s.p,{children:["A unique counter is the number of unique ",(0,n.jsx)(s.code,{children:"integer"})," values. For the ",(0,n.jsx)(s.code,{children:"string"})," values, hashes are used."]}),"\n",(0,n.jsx)(s.p,{children:"Suppose we receive packets containing the senders' IDs. We can count how many distinct senders there are:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{"metrics":[ {"name": "toy_packets_user",\n "tags":{"format": "JSON", "status": "ok"},\n "unique": [17]} ]}\n'})}),"\n",(0,n.jsx)(s.p,{children:"The unique value is an array, so you can send several values at a time."}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"format"}),(0,n.jsx)(s.th,{children:"status"}),(0,n.jsx)(s.th,{children:"counter"}),(0,n.jsx)(s.th,{children:"unique"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_user"}),(0,n.jsx)(s.td,{children:"JSON"}),(0,n.jsx)(s.td,{children:"ok"}),(0,n.jsx)(s.td,{children:"100"}),(0,n.jsx)(s.td,{children:"uniq(17, 19, 13, 15)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_user"}),(0,n.jsx)(s.td,{children:"TL"}),(0,n.jsx)(s.td,{children:"ok"}),(0,n.jsx)(s.td,{children:"200"}),(0,n.jsx)(s.td,{children:"uniq(17, 19, 13, 15, 11)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_packets_user"}),(0,n.jsx)(s.td,{children:"TL"}),(0,n.jsx)(s.td,{children:"error_too_short"}),(0,n.jsx)(s.td,{children:"5"}),(0,n.jsx)(s.td,{children:"uniq(51)"})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["StatsHouse uses the ",(0,n.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/HyperLogLog",children:"HyperLogLog"}),"-like function: the values themselves are inaccessible, so\nyou can only estimate the ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#cardinality",children:"cardinality"})," for the sets."]}),"\n",(0,n.jsxs)(s.p,{children:["For unique metrics, StatsHouse stores the aggregates: ",(0,n.jsx)(s.em,{children:"sum"}),", ",(0,n.jsx)(s.em,{children:"min"}),", ",(0,n.jsx)(s.em,{children:"max"})," (the same as for the value metrics\ninterpreted as ",(0,n.jsx)(s.code,{children:"int64"})," and approximated to ",(0,n.jsx)(s.code,{children:"float64"}),"). Knowing the range of values may be useful for debugging."]}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"Implementation details"}),(0,n.jsxs)("p",{children:["Unique counters are ",(0,n.jsx)(s.code,{children:"int64"}),"\u2014StatsHouse interprets it as 64 bits. They are not ",(0,n.jsx)(s.code,{children:"uint64"})," just because some\nprogramming languages does not have it. These values are regarded as hashes. When estimating cardinality for the\nsets of these values, StatsHouse tests them for equality and inequality."]}),(0,n.jsxs)("p",{children:["When producing aggregates (",(0,n.jsx)(s.code,{children:"sum"}),", ",(0,n.jsx)(s.code,{children:"min"}),", ",(0,n.jsx)(s.code,{children:"max"}),"), StatsHouse interprets these values as ",(0,n.jsx)(s.code,{children:"int64"})," and then converts\nthem into ",(0,n.jsx)(s.code,{children:"float64"})," as the column for these aggregates are the same as for the value aggregates."]})]}),"\n",(0,n.jsx)(s.h3,{id:"combining-metric-types",children:"Combining metric types"}),"\n",(0,n.jsx)(s.p,{children:"Check the valid metric type combinations in the table below:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"What you send"}),(0,n.jsx)(s.th,{children:"What you get"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'"counter":100'})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"counter"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'"value":[1, 2, 3]'})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"counter"})," (the size of the array), ",(0,n.jsx)(s.code,{children:"value"})," (",(0,n.jsx)(s.code,{children:"sum"}),", ",(0,n.jsx)(s.code,{children:"min"}),", ",(0,n.jsx)(s.code,{children:"max"}),")"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'"unique":[17, 25, 37]'})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"counter"})," (the size of the array), ",(0,n.jsx)(s.code,{children:"value"})," (",(0,n.jsx)(s.code,{children:"sum"}),", ",(0,n.jsx)(s.code,{children:"min"}),", ",(0,n.jsx)(s.code,{children:"max"}),"), ",(0,n.jsx)(s.code,{children:"unique"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'"counter":6, "value":[1, 2, 3]'})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#user-guided-sampling",children:"User-guided sampling"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'"value":100,"unique":100'})}),(0,n.jsx)(s.td,{children:(0,n.jsx)("text",{className:"orange-text",children:"This is not a valid combination"})})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"If you refactor your existing metric, i.e., switch between different metric types for a single metric, the data may\nbecome confusing or uninformative."}),"\n",(0,n.jsx)(s.admonition,{type:"important",children:(0,n.jsxs)(s.p,{children:["Keep sending data of the ",(0,n.jsx)(s.strong,{children:"same type per metric"}),"."]})}),"\n",(0,n.jsx)(s.h4,{id:"counters-for-value-and-unique-metrics",children:"Counters for value and unique metrics"}),"\n",(0,n.jsxs)(s.p,{children:["If you send a ",(0,n.jsx)(s.code,{children:"value"})," or ",(0,n.jsx)(s.code,{children:"unique"})," array, the size of this array becomes the ",(0,n.jsx)(s.code,{children:"counter"})," for this metric.\nThus, you should not implement a separate counter metric for your ",(0,n.jsx)(s.code,{children:"value"})," or ",(0,n.jsx)(s.code,{children:"unique"})," metrics.\nYou still can specify ",(0,n.jsx)(s.code,{children:"counter"})," to implement\n",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#user-guided-sampling",children:"user-guided sampling"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"tags",children:"Tags"}),"\n",(0,n.jsx)(s.p,{children:"Use tags to differentiate the characteristics of what you measure, the contributing factors, or a context."}),"\n",(0,n.jsxs)(s.p,{children:['Tags are additional dimensions you use to filter or group your data. They are sometimes mentioned as "labels" or\n"keys." Tags are the ',(0,n.jsx)(s.em,{children:"name-value"})," pairs."]}),"\n",(0,n.jsx)(s.p,{children:"Imagine you conducting an A/B test: which color-text combination is better for a button? You measure the number\nof clicks per button and use the tags:"}),"\n",(0,n.jsx)("img",{src:r,width:"900"}),"\n",(0,n.jsx)(s.p,{children:"Tagged metrics help to verify hypotheses about your data. For monitoring, troubleshooting, or other purposes, you may\nask questions like these:"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:'"Does the error rate differ for platforms?"'}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"or"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:'"What is the region we have the highest request rate from? Does it differ for environments?"'}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"For these example questions, you may send metrics (here, using the client library for Python):"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-Python",children:'statshouse.value("error_rate", {"platform": "web"}, 42.5)\n                   \u2191                 \u2191         \u2191      \u2191          \n                metric name          \u2191         \u2191   measurement      \n                                 tag name      \u2191       \n                                             tag value \n'})}),"\n",(0,n.jsx)(s.p,{children:"or"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-Python",children:'statshouse.value("request_rate", {"env": "production", "region": "moscow"}, 42.5)\n                   \u2191                 \u2191         \u2191           \u2191        \u2191         \u2191\n                metric name          \u2191         \u2191           \u2191        \u2191      measurement\n                                 tag name      \u2191       tag name     \u2191\n                                             tag value            tag value   \n'})}),"\n",(0,n.jsxs)(s.p,{children:["Then you can ",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#7--tags",children:"filter or group"})," your data using these tags.\nWhen you view a metric on a graph, the default UI behavior is to use no grouping."]}),"\n",(0,n.jsx)(s.h3,{id:"how-many-tags",children:"How many tags"}),"\n",(0,n.jsx)(s.p,{children:"You can use 16 tags per metric:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["the ",(0,n.jsx)(s.code,{children:"0"})," tag is usually for an ",(0,n.jsx)(s.code,{children:"environment"})," (read more about ",(0,n.jsx)(s.a,{href:"#customizing-the-environment-tag",children:"customizing it"}),"),"]}),"\n",(0,n.jsxs)(s.li,{children:["the ",(0,n.jsx)(s.code,{children:"1..15"})," tags are for any other characteristics."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["There is also one more ",(0,n.jsx)(s.a,{href:"#string-top-tag",children:"String top tag"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["the ",(0,n.jsx)(s.code,{children:"__s"})," tag."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"what-if-i-want-more-tags",children:'"What if I want more tags?"'}),"\n",(0,n.jsx)(s.p,{children:"Unfortunately, it is impossible for now. We plan to increase the number of tags in the future."}),"\n",(0,n.jsx)(s.h3,{id:"tag-names",children:"Tag names"}),"\n",(0,n.jsxs)(s.p,{children:["You can use system tag names (",(0,n.jsx)(s.code,{children:"0..15"}),") to send data. For convenience,\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#describe-tags",children:"add aliases (custom names) to your tags"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Please use these characters:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Latin alphabet"}),"\n",(0,n.jsx)(s.li,{children:"integers"}),"\n",(0,n.jsx)(s.li,{children:"underscores"}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsx)(s.p,{children:"Do not start tag names with underscores. They are for StatsHouse internal use only."})}),"\n",(0,n.jsx)(s.p,{children:"You can use the same tag names for different metrics."}),"\n",(0,n.jsxs)(s.p,{children:["In the StatsHouse UI, you can ",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#tags",children:"edit"})," tag names and add short descriptions to them."]}),"\n",(0,n.jsx)(s.h3,{id:"tag-values",children:"Tag values"}),"\n",(0,n.jsxs)(s.p,{children:["Tag values are usually ",(0,n.jsx)(s.code,{children:"string"})," values. StatsHouse maps all of them to ",(0,n.jsx)(s.code,{children:"int32"})," values for higher efficiency.\nThis huge ",(0,n.jsx)(s.code,{children:"string"}),"\u2194",(0,n.jsx)(s.code,{children:"int32"})," map is common for all metrics, and the budget for creating new mappings is limited.\nMapping flood appears when you exceed this budget."]}),"\n",(0,n.jsx)(s.h4,{id:"length-and-characters",children:"Length and characters"}),"\n",(0,n.jsxs)(s.p,{children:["Tag values must contain only ",(0,n.jsx)(s.strong,{children:"UTF-8 printable"})," characters.\nAll the non-printing characters are replaced with the traffic sign."]}),"\n",(0,n.jsx)(s.p,{children:"The maximum tag value length is 128 bytes\u2014the rest is cut."}),"\n",(0,n.jsx)(s.p,{children:"Tag values are also normalized: all leading and trailing white space is removed, as defined by Unicode.\nThe sequence of Unicode whitespace characters within a tag value is replaced with one ASCII whitespace\ncharacter."}),"\n",(0,n.jsx)(s.h4,{id:"how-many-tag-values",children:"How many tag values"}),"\n",(0,n.jsxs)(s.p,{children:["There is no formal limitation for a number of tag values, but the rule is to have ",(0,n.jsx)(s.strong,{children:"not that many"})," of them."]}),"\n",(0,n.jsxs)(s.p,{children:["Tags with many different values such as user IDs or email addresses may lead to\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#mapping-status",children:"mapping flood"})," errors or increased ",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#sampling",children:"sampling"})," due to\nhigh ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#cardinality",children:"cardinality"}),".\nIn StatsHouse, metric cardinality is how many unique tag value combinations you send for a metric."]}),"\n",(0,n.jsxs)(s.p,{children:["If a tag has too many values, they will soon exceed the\n",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#the-budget-for-creating-tag-values",children:"mapping budget"})," and will be lost: tag values\nfor your measurements will become the empty strings."]}),"\n",(0,n.jsxs)(s.p,{children:["Even if all your tag values have been already mapped, and you\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#set-up-raw-tags",children:"avoid the mapping flood"})," but keep sending data with many tag values,\nyour data will probably be ",(0,n.jsx)(s.a,{href:"/statshouse/overview/concepts#sampling",children:"sampled"}),". Sampling means that\nStatsHouse throws away pieces of data to reduce its overall amount. To keep aggregation, statistics, and overall\ngraph's shape the same, StatsHouse multiplies the rest of data by a sampling coefficient."]}),"\n",(0,n.jsxs)(s.p,{children:["If it is important for you not to sample data at all,\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#cardinality",children:"keep an eye on your metric cardinality"})," or reduce ",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#resolution",children:"resolution"})," for\nyour metric."]}),"\n",(0,n.jsxs)(s.p,{children:["We recommend that the very first tags have the lowest cardinality rate. For example, the ",(0,n.jsx)(s.code,{children:"0"})," tag is usually an\n",(0,n.jsx)(s.code,{children:"environment"})," tag having not that many values."]}),"\n",(0,n.jsxs)(s.admonition,{type:"tip",children:[(0,n.jsxs)(s.p,{children:["If you need a tag with many different 32-bit integer values (such as ",(0,n.jsx)(s.code,{children:"user_ID"}),"), use the\n",(0,n.jsx)(s.a,{href:"#raw-tags",children:"Raw"})," tag values to avoid the mapping flood."]}),(0,n.jsxs)(s.p,{children:["For many different string values (such as ",(0,n.jsx)(s.code,{children:"search_request"}),"), use a ",(0,n.jsx)(s.a,{href:"#string-top-tag",children:"String top tag"}),"."]})]}),"\n",(0,n.jsxs)(s.h3,{id:"raw-tags",children:[(0,n.jsx)(s.em,{children:"Raw"})," tags"]}),"\n",(0,n.jsxs)(s.p,{children:["If tag values in your metric are originally 32-bit integer values, you can\n",(0,n.jsxs)(s.a,{href:"/statshouse/guides/edit-metrics#set-up-raw-tags",children:["mark them as ",(0,n.jsx)(s.em,{children:"Raw"})," ones"]}),"\nto avoid the ",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#the-budget-for-creating-tag-values",children:"mapping flood"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["These ",(0,n.jsx)(s.em,{children:"Raw"})," tag values will be parsed as ",(0,n.jsx)(s.code,{children:"(u)int32"})," (",(0,n.jsx)(s.code,{children:"-2^31..2^32-1"})," values are allowed)\nand inserted into the ClickHouse database as is."]}),"\n",(0,n.jsxs)(s.p,{children:["To help yourself remember what your ",(0,n.jsx)(s.em,{children:"Raw"})," tag values mean, specify a\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#specifying-formats-for-raw-tag-values",children:"format"})," for your data to show in the UI and add\n",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#value-comments",children:"value comments"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"string-top-tag",children:"String top tag"}),"\n",(0,n.jsxs)(s.p,{children:["Use a ",(0,n.jsx)(s.em,{children:"String top tag"})," (",(0,n.jsx)(s.code,{children:"__s"}),") when you need a tag with many different ",(0,n.jsx)(s.code,{children:"string"})," values such as referrers or search\nrequests."]}),"\n",(0,n.jsxs)(s.p,{children:["With the common tags, you will get ",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#mapping-status",children:"mapping flood errors"})," very soon for this scenario.\nThe ",(0,n.jsx)(s.em,{children:"String top tag"})," stands apart from the other ones as its values are not\n",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#metadata",children:"mapped"})," to integers. Thus, you can avoid\nmapping flood errors and massive sampling."]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.em,{children:"String top tag"})," has a special storage: when you send your data labeled with the ",(0,n.jsx)(s.em,{children:"String top"})," tag values, only the\nmost popular tag values are stored. The other tag values for this metric become empty strings and are aggregated. Read\nmore about the ",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#string-top-tag",children:"String top tag implementation"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["To filter data with the ",(0,n.jsx)(s.em,{children:"String top tag"})," on a graph, ",(0,n.jsx)(s.a,{href:"/statshouse/guides/edit-metrics#set-up-string-top-tag",children:"add a name or description"})," to it."]}),"\n",(0,n.jsx)(s.h3,{id:"host-name-as-a-tag",children:"Host name as a tag"}),"\n",(0,n.jsxs)(s.p,{children:["To view statistics for each host separately, you may want to use host names as tag values.\nTry the ",(0,n.jsx)(s.em,{children:"Max host"})," option instead. You do not have to send something special to get use\nof ",(0,n.jsx)(s.em,{children:"Max host"}),"\u2014",(0,n.jsx)(s.a,{href:"/statshouse/guides/view-graph#9--max-host",children:"enable it in the UI"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Using host names as tag values prevents data from being aggregated and leads to increased sampling.\nBy contrast, the ",(0,n.jsx)(s.em,{children:"Max host"})," option does not lead to increased sampling but allows you to find the host that sends the\nmaximum value for your metric."]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.em,{children:"Max host"})," option helps to answer questions like these:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"which host has the maximum disk space usage, or"}),"\n",(0,n.jsx)(s.li,{children:"which host shows the maximum rate for a particular error type."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["During aggregation, StatsHouse uses the special ",(0,n.jsx)(s.code,{children:"max_host"})," column in the database to store the name of the host,\nwhich is responsible for sending the maximum value (for value metrics) or the maximum contribution to the counter (for\ncounter metrics)."]}),"\n",(0,n.jsx)(s.p,{children:"For example, StatsHouse aggregates the rows from two agents:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"format"}),(0,n.jsx)(s.th,{children:"\u2026"}),(0,n.jsx)(s.th,{children:"min"}),(0,n.jsx)(s.th,{children:"max"}),(0,n.jsx)(s.th,{children:"max_host"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_latency"}),(0,n.jsx)(s.td,{children:"JSON"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"200"}),(0,n.jsx)(s.td,{children:"1200"}),(0,n.jsx)(s.td,{children:"nginx001"})]})})]}),"\n",(0,n.jsx)(s.p,{children:"and"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"format"}),(0,n.jsx)(s.th,{children:"\u2026"}),(0,n.jsx)(s.th,{children:"min"}),(0,n.jsx)(s.th,{children:"max"}),(0,n.jsx)(s.th,{children:"max_host"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_latency"}),(0,n.jsx)(s.td,{children:"JSON"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"4"}),(0,n.jsx)(s.td,{children:"80"}),(0,n.jsx)(s.td,{children:"nginx003"})]})})]}),"\n",(0,n.jsxs)(s.p,{children:["The maximum ",(0,n.jsx)(s.code,{children:"toy_latency"})," value (which is 1200) is associated with the ",(0,n.jsx)(s.code,{children:"nginx001"})," host in the resulting aggregate:"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"timestamp"}),(0,n.jsx)(s.th,{children:"metric"}),(0,n.jsx)(s.th,{children:"format"}),(0,n.jsx)(s.th,{children:"\u2026"}),(0,n.jsx)(s.th,{children:"min"}),(0,n.jsx)(s.th,{children:"max"}),(0,n.jsx)(s.th,{children:"max_host"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"13:45:05"}),(0,n.jsx)(s.td,{children:"toy_latency"}),(0,n.jsx)(s.td,{children:"JSON"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"4"}),(0,n.jsx)(s.td,{children:"1200"}),(0,n.jsx)(s.td,{children:"nginx001"})]})})]}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"Implementation details"}),(0,n.jsxs)("p",{children:[" The value in the ",(0,n.jsx)(s.code,{children:"max_host"})," column is ",(0,n.jsx)(s.code,{children:"float32"})," rather than ",(0,n.jsx)(s.code,{children:"float64"})," for better compression as there is no\nneed for high precision here. The host name is stored as the ",(0,n.jsx)(s.code,{children:"string"}),"\u2194",(0,n.jsx)(s.code,{children:"int32"})," mapping similar to tag values."]})]}),"\n",(0,n.jsxs)(s.p,{children:["We also recommend using the ",(0,n.jsx)(s.code,{children:"environment"})," tag (or similar) instead of ",(0,n.jsx)(s.code,{children:"host_name"}),". When you deploy an experimental feature\nto one or more hosts, label them with the ",(0,n.jsx)(s.code,{children:"staging"})," or ",(0,n.jsx)(s.code,{children:"development"})," tag values instead of their host names."]}),"\n",(0,n.jsxs)(s.h3,{id:"customizing-the-environment-tag",children:["Customizing the ",(0,n.jsx)(s.code,{children:"environment"})," tag"]}),"\n",(0,n.jsxs)(s.p,{children:["StatsHouse stores metrics in a ClickHouse ",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#database",children:"database"}),",\nwhere 16 columns are for tags. These tag columns are named like ",(0,n.jsx)(s.code,{children:"1..15"}),'. For example, the tag names may be \u201cformat\u201d\nand \u201cstatus.\u201d One can edit the metric, so that "format" relates to the ',(0,n.jsx)(s.code,{children:"1"}),' column,\nand "status" relates to the ',(0,n.jsx)(s.code,{children:"2"})," column. You can use system names ",(0,n.jsx)(s.code,{children:"1..15"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["What about the ",(0,n.jsx)(s.code,{children:"0"})," column? Use it to specify environments for collecting statistics, e.g., ",(0,n.jsx)(s.code,{children:"production"})," or ",(0,n.jsx)(s.code,{children:"staging"}),".\nFor example, if the experimental version of software is installed on a number of hosts, you can associate the ",(0,n.jsx)(s.code,{children:"0"})," tag\nwith this experiment. Set up this tag once in the client library during initialization. In other respects, the ",(0,n.jsx)(s.code,{children:"0"}),"\ntag is similar to the other ones."]}),"\n",(0,n.jsx)(s.h2,{id:"timestamps",children:"Timestamps"}),"\n",(0,n.jsx)(s.p,{children:"StatsHouse writes real-time data as a priority."}),"\n",(0,n.jsx)(s.admonition,{type:"important",children:(0,n.jsx)(s.p,{children:"Writing historical data is allowed only for the latest hour and a half."})}),"\n",(0,n.jsx)(s.p,{children:"If the timestamp is in the future, StatsHouse replaces it with the current time."}),"\n",(0,n.jsx)(s.p,{children:"If the timestamp relates to a moment that is more than 1.5 hours ago, StatsHouse replaces it with the current time\nminus 1.5 hours."}),"\n",(0,n.jsxs)(s.p,{children:["For ",(0,n.jsx)(s.code,{children:"cron"})," jobs that send metric data, use the one-hour sending period:\nit is OK to send data once in an hour, but it is not OK to send data once in a day."]}),"\n",(0,n.jsxs)(s.p,{children:["We do not encourage you to specify timestamps explicitly because rows with differing timestamps cannot be\naggregated\u2014this may lead to increased sampling. Moreover, the ClickHouse\n",(0,n.jsx)(s.a,{href:"/statshouse/overview/components#database",children:"database"})," is rather slow when inserting historical data."]})]})}function x(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},7444:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/metric-formula-type-ae2fb9691e4f00ceb27d33a8d2df9eaa.png"},2808:(e,s,t)=>{t.p},1151:(e,s,t)=>{t.d(s,{Z:()=>d,a:()=>a});var n=t(7294);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);