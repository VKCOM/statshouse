// Copyright 2022 V Kontakte LLC
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
package internal

import (
	"github.com/vkcom/statshouse/internal/vkgo/basictl"
)

var _ = basictl.NatWrite

func (item StatshouseMetadataGetInvertMappingResponse) AsUnion() StatshouseMetadataGetInvertMappingResponseUnion {
	var ret StatshouseMetadataGetInvertMappingResponseUnion
	ret.SetGetInvertMappingResponse(item)
	return ret
}

// AsUnion will be here
type StatshouseMetadataGetInvertMappingResponse struct {
	Key string
}

func (StatshouseMetadataGetInvertMappingResponse) TLName() string {
	return "statshouse_metadata.getInvertMappingResponse"
}
func (StatshouseMetadataGetInvertMappingResponse) TLTag() uint32 { return 0x9286abac }

func (item *StatshouseMetadataGetInvertMappingResponse) Reset() {
	item.Key = ""
}

func (item *StatshouseMetadataGetInvertMappingResponse) Read(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	return basictl.StringRead(w, &item.Key)
}

func (item *StatshouseMetadataGetInvertMappingResponse) Write(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	return basictl.StringWrite(w, item.Key)
}

func (item *StatshouseMetadataGetInvertMappingResponse) ReadBoxed(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	if w, err = basictl.NatReadExactTag(w, 0x9286abac); err != nil {
		return w, err
	}
	return item.Read(w, nat_field_mask)
}

func (item *StatshouseMetadataGetInvertMappingResponse) WriteBoxed(w []byte, nat_field_mask uint32) ([]byte, error) {
	w = basictl.NatWrite(w, 0x9286abac)
	return item.Write(w, nat_field_mask)
}

func StatshouseMetadataGetInvertMappingResponse__ReadJSON(item *StatshouseMetadataGetInvertMappingResponse, j interface{}, nat_field_mask uint32) error {
	return item.readJSON(j, nat_field_mask)
}
func (item *StatshouseMetadataGetInvertMappingResponse) readJSON(j interface{}, nat_field_mask uint32) error {
	_jm, _ok := j.(map[string]interface{})
	if j != nil && !_ok {
		return ErrorInvalidJSON("statshouse_metadata.getInvertMappingResponse", "expected json object")
	}
	_jKey := _jm["key"]
	delete(_jm, "key")
	if err := JsonReadString(_jKey, &item.Key); err != nil {
		return err
	}
	for k := range _jm {
		return ErrorInvalidJSONExcessElement("statshouse_metadata.getInvertMappingResponse", k)
	}
	return nil
}

func (item *StatshouseMetadataGetInvertMappingResponse) WriteJSON(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	w = append(w, '{')
	if len(item.Key) != 0 {
		w = basictl.JSONAddCommaIfNeeded(w)
		w = append(w, `"key":`...)
		w = basictl.JSONWriteString(w, item.Key)
	}
	return append(w, '}'), nil
}

func (item StatshouseMetadataGetInvertMappingResponseKeyNotExists) AsUnion() StatshouseMetadataGetInvertMappingResponseUnion {
	var ret StatshouseMetadataGetInvertMappingResponseUnion
	ret.SetKeyNotExists()
	return ret
}

// AsUnion will be here
type StatshouseMetadataGetInvertMappingResponseKeyNotExists struct {
}

func (StatshouseMetadataGetInvertMappingResponseKeyNotExists) TLName() string {
	return "statshouse_metadata.getInvertMappingResponseKeyNotExists"
}
func (StatshouseMetadataGetInvertMappingResponseKeyNotExists) TLTag() uint32 { return 0x9286abab }

func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) Reset() {}
func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) Read(w []byte, nat_field_mask uint32) ([]byte, error) {
	return w, nil
}
func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) Write(w []byte, nat_field_mask uint32) ([]byte, error) {
	return w, nil
}
func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) ReadBoxed(w []byte, nat_field_mask uint32) ([]byte, error) {
	return basictl.NatReadExactTag(w, 0x9286abab)
}
func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) WriteBoxed(w []byte, nat_field_mask uint32) ([]byte, error) {
	return basictl.NatWrite(w, 0x9286abab), nil
}

func StatshouseMetadataGetInvertMappingResponseKeyNotExists__ReadJSON(item *StatshouseMetadataGetInvertMappingResponseKeyNotExists, j interface{}, nat_field_mask uint32) error {
	return item.readJSON(j, nat_field_mask)
}
func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) readJSON(j interface{}, nat_field_mask uint32) error {
	_jm, _ok := j.(map[string]interface{})
	if j != nil && !_ok {
		return ErrorInvalidJSON("statshouse_metadata.getInvertMappingResponseKeyNotExists", "expected json object")
	}
	for k := range _jm {
		return ErrorInvalidJSONExcessElement("statshouse_metadata.getInvertMappingResponseKeyNotExists", k)
	}
	return nil
}

func (item *StatshouseMetadataGetInvertMappingResponseKeyNotExists) WriteJSON(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	w = append(w, '{')
	return append(w, '}'), nil
}

var _StatshouseMetadataGetInvertMappingResponseUnion = [2]UnionElement{
	{TLTag: 0x9286abac, TLName: "statshouse_metadata.getInvertMappingResponse", TLString: "statshouse_metadata.getInvertMappingResponse#9286abac"},
	{TLTag: 0x9286abab, TLName: "statshouse_metadata.getInvertMappingResponseKeyNotExists", TLString: "statshouse_metadata.getInvertMappingResponseKeyNotExists#9286abab"},
}

type StatshouseMetadataGetInvertMappingResponseUnion struct {
	valueGetInvertMappingResponse StatshouseMetadataGetInvertMappingResponse
	index                         int
}

func (item StatshouseMetadataGetInvertMappingResponseUnion) TLName() string {
	return _StatshouseMetadataGetInvertMappingResponseUnion[item.index].TLName
}
func (item StatshouseMetadataGetInvertMappingResponseUnion) TLTag() uint32 {
	return _StatshouseMetadataGetInvertMappingResponseUnion[item.index].TLTag
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) Reset() {
	item.ResetToGetInvertMappingResponse()
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) IsGetInvertMappingResponse() bool {
	return item.index == 0
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) AsGetInvertMappingResponse() (*StatshouseMetadataGetInvertMappingResponse, bool) {
	if item.index != 0 {
		return nil, false
	}
	return &item.valueGetInvertMappingResponse, true
}
func (item *StatshouseMetadataGetInvertMappingResponseUnion) ResetToGetInvertMappingResponse() *StatshouseMetadataGetInvertMappingResponse {
	item.index = 0
	item.valueGetInvertMappingResponse.Reset()
	return &item.valueGetInvertMappingResponse
}
func (item *StatshouseMetadataGetInvertMappingResponseUnion) SetGetInvertMappingResponse(value StatshouseMetadataGetInvertMappingResponse) {
	item.index = 0
	item.valueGetInvertMappingResponse = value
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) IsKeyNotExists() bool {
	return item.index == 1
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) AsKeyNotExists() (StatshouseMetadataGetInvertMappingResponseKeyNotExists, bool) {
	var value StatshouseMetadataGetInvertMappingResponseKeyNotExists
	return value, item.index == 1
}
func (item *StatshouseMetadataGetInvertMappingResponseUnion) ResetToKeyNotExists() { item.index = 1 }
func (item *StatshouseMetadataGetInvertMappingResponseUnion) SetKeyNotExists()     { item.index = 1 }

func (item *StatshouseMetadataGetInvertMappingResponseUnion) ReadBoxed(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	var tag uint32
	if w, err = basictl.NatRead(w, &tag); err != nil {
		return w, err
	}
	switch tag {
	case 0x9286abac:
		item.index = 0
		return item.valueGetInvertMappingResponse.Read(w, nat_field_mask)
	case 0x9286abab:
		item.index = 1
		return w, nil
	default:
		return w, ErrorInvalidUnionTag("statshouse_metadata.GetInvertMappingResponse", tag)
	}
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) WriteBoxed(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	w = basictl.NatWrite(w, _StatshouseMetadataGetInvertMappingResponseUnion[item.index].TLTag)
	switch item.index {
	case 0:
		return item.valueGetInvertMappingResponse.Write(w, nat_field_mask)
	case 1:
		return w, nil
	default: // Impossible due to panic above
		return w, nil
	}
}

func StatshouseMetadataGetInvertMappingResponseUnion__ReadJSON(item *StatshouseMetadataGetInvertMappingResponseUnion, j interface{}, nat_field_mask uint32) error {
	return item.readJSON(j, nat_field_mask)
}
func (item *StatshouseMetadataGetInvertMappingResponseUnion) readJSON(j interface{}, nat_field_mask uint32) error {
	_jm, _tag, err := JsonReadUnionType("statshouse_metadata.GetInvertMappingResponse", j)
	if err != nil {
		return err
	}
	jvalue := _jm["value"]
	switch _tag {
	case "statshouse_metadata.getInvertMappingResponse#9286abac", "statshouse_metadata.getInvertMappingResponse", "#9286abac":
		item.index = 0
		if err := StatshouseMetadataGetInvertMappingResponse__ReadJSON(&item.valueGetInvertMappingResponse, jvalue, nat_field_mask); err != nil {
			return err
		}
		delete(_jm, "value")
	case "statshouse_metadata.getInvertMappingResponseKeyNotExists#9286abab", "statshouse_metadata.getInvertMappingResponseKeyNotExists", "#9286abab":
		item.index = 1
	default:
		return ErrorInvalidUnionTagJSON("statshouse_metadata.GetInvertMappingResponse", _tag)
	}
	for k := range _jm {
		return ErrorInvalidJSONExcessElement("statshouse_metadata.GetInvertMappingResponse", k)
	}
	return nil
}

func (item *StatshouseMetadataGetInvertMappingResponseUnion) WriteJSON(w []byte, nat_field_mask uint32) (_ []byte, err error) {
	switch item.index {
	case 0:
		w = append(w, `{"type":"statshouse_metadata.getInvertMappingResponse#9286abac","value":`...)
		if w, err = item.valueGetInvertMappingResponse.WriteJSON(w, nat_field_mask); err != nil {
			return w, err
		}
		return append(w, '}'), nil
	case 1:
		return append(w, `{"type":"statshouse_metadata.getInvertMappingResponseKeyNotExists#9286abab"}`...), nil
	default: // Impossible due to panic above
		return w, nil
	}
}
