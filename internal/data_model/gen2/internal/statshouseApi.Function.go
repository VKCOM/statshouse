// Copyright 2023 V Kontakte LLC
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
package internal

import (
	"github.com/vkcom/statshouse/internal/vkgo/basictl"
)

var _ = basictl.NatWrite

func BuiltinVectorStatshouseApiFunctionRead(w []byte, vec *[]StatshouseApiFunction) (_ []byte, err error) {
	var l uint32
	if w, err = basictl.NatRead(w, &l); err != nil {
		return w, err
	}
	if err = basictl.CheckLengthSanity(w, l, 4); err != nil {
		return w, err
	}
	if uint32(cap(*vec)) < l {
		*vec = make([]StatshouseApiFunction, l)
	} else {
		*vec = (*vec)[:l]
	}
	for i := range *vec {
		if w, err = (*vec)[i].ReadBoxed(w); err != nil {
			return w, err
		}
	}
	return w, nil
}

func BuiltinVectorStatshouseApiFunctionWrite(w []byte, vec []StatshouseApiFunction) []byte {
	w = basictl.NatWrite(w, uint32(len(vec)))
	for _, elem := range vec {
		w = elem.WriteBoxed(w)
	}
	return w
}

func BuiltinVectorStatshouseApiFunctionReadJSON(legacyTypeNames bool, in *basictl.JsonLexer, vec *[]StatshouseApiFunction) error {
	*vec = (*vec)[:cap(*vec)]
	index := 0
	if in != nil {
		in.Delim('[')
		if !in.Ok() {
			return ErrorInvalidJSON("[]StatshouseApiFunction", "expected json array")
		}
		for ; !in.IsDelim(']'); index++ {
			if len(*vec) <= index {
				var newValue StatshouseApiFunction
				*vec = append(*vec, newValue)
				*vec = (*vec)[:cap(*vec)]
			}
			if err := (*vec)[index].ReadJSON(legacyTypeNames, in); err != nil {
				return err
			}
			in.WantComma()
		}
		in.Delim(']')
		if !in.Ok() {
			return ErrorInvalidJSON("[]StatshouseApiFunction", "expected json array's end")
		}
	}
	*vec = (*vec)[:index]
	return nil
}

func BuiltinVectorStatshouseApiFunctionWriteJSON(w []byte, vec []StatshouseApiFunction) []byte {
	return BuiltinVectorStatshouseApiFunctionWriteJSONOpt(true, false, w, vec)
}
func BuiltinVectorStatshouseApiFunctionWriteJSONOpt(newTypeNames bool, short bool, w []byte, vec []StatshouseApiFunction) []byte {
	w = append(w, '[')
	for _, elem := range vec {
		w = basictl.JSONAddCommaIfNeeded(w)
		w = elem.WriteJSONOpt(newTypeNames, short, w)
	}
	return append(w, ']')
}

func StatshouseApiFnAvg() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(5) }

func StatshouseApiFnCount() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(0) }

func StatshouseApiFnCountNorm() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(1) }

func StatshouseApiFnCumulAvg() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(6) }

func StatshouseApiFnCumulCount() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(2) }

func StatshouseApiFnCumulSum() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(9) }

func StatshouseApiFnDerivativeAvg() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(28) }

func StatshouseApiFnDerivativeCount() StatshouseApiFunction {
	return StatshouseApiFunction__MakeEnum(29)
}

func StatshouseApiFnDerivativeCountNorm() StatshouseApiFunction {
	return StatshouseApiFunction__MakeEnum(30)
}

func StatshouseApiFnDerivativeMax() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(27) }

func StatshouseApiFnDerivativeMin() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(26) }

func StatshouseApiFnDerivativeSum() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(31) }

func StatshouseApiFnDerivativeSumNorm() StatshouseApiFunction {
	return StatshouseApiFunction__MakeEnum(32)
}

func StatshouseApiFnDerivativeUnique() StatshouseApiFunction {
	return StatshouseApiFunction__MakeEnum(33)
}

func StatshouseApiFnDerivativeUniqueNorm() StatshouseApiFunction {
	return StatshouseApiFunction__MakeEnum(34)
}

func StatshouseApiFnMax() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(4) }

func StatshouseApiFnMaxCountHost() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(25) }

func StatshouseApiFnMaxHost() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(24) }

func StatshouseApiFnMin() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(3) }

func StatshouseApiFnP01() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(11) }

func StatshouseApiFnP1() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(12) }

func StatshouseApiFnP10() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(14) }

func StatshouseApiFnP25() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(15) }

func StatshouseApiFnP5() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(13) }

func StatshouseApiFnP50() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(16) }

func StatshouseApiFnP75() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(17) }

func StatshouseApiFnP90() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(18) }

func StatshouseApiFnP95() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(19) }

func StatshouseApiFnP99() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(20) }

func StatshouseApiFnP999() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(21) }

func StatshouseApiFnStddev() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(10) }

func StatshouseApiFnSum() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(7) }

func StatshouseApiFnSumNorm() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(8) }

func StatshouseApiFnUnique() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(22) }

func StatshouseApiFnUniqueNorm() StatshouseApiFunction { return StatshouseApiFunction__MakeEnum(23) }

var _StatshouseApiFunction = [35]UnionElement{
	{TLTag: 0x89689775, TLName: "statshouseApi.fnCount", TLString: "statshouseApi.fnCount#89689775"},
	{TLTag: 0x60e68b5c, TLName: "statshouseApi.fnCountNorm", TLString: "statshouseApi.fnCountNorm#60e68b5c"},
	{TLTag: 0x871201c4, TLName: "statshouseApi.fnCumulCount", TLString: "statshouseApi.fnCumulCount#871201c4"},
	{TLTag: 0xb4cb2644, TLName: "statshouseApi.fnMin", TLString: "statshouseApi.fnMin#b4cb2644"},
	{TLTag: 0xf90de384, TLName: "statshouseApi.fnMax", TLString: "statshouseApi.fnMax#f90de384"},
	{TLTag: 0x6323c2f6, TLName: "statshouseApi.fnAvg", TLString: "statshouseApi.fnAvg#6323c2f6"},
	{TLTag: 0xf4d9ad09, TLName: "statshouseApi.fnCumulAvg", TLString: "statshouseApi.fnCumulAvg#f4d9ad09"},
	{TLTag: 0x80ce3cf1, TLName: "statshouseApi.fnSum", TLString: "statshouseApi.fnSum#80ce3cf1"},
	{TLTag: 0x361963d5, TLName: "statshouseApi.fnSumNorm", TLString: "statshouseApi.fnSumNorm#361963d5"},
	{TLTag: 0x42fc39b6, TLName: "statshouseApi.fnCumulSum", TLString: "statshouseApi.fnCumulSum#42fc39b6"},
	{TLTag: 0x2043e480, TLName: "statshouseApi.fnStddev", TLString: "statshouseApi.fnStddev#2043e480"},
	{TLTag: 0x381b1cee, TLName: "statshouseApi.fnP01", TLString: "statshouseApi.fnP01#381b1cee"},
	{TLTag: 0xbbb36a23, TLName: "statshouseApi.fnP1", TLString: "statshouseApi.fnP1#bbb36a23"},
	{TLTag: 0xbcdeae3a, TLName: "statshouseApi.fnP5", TLString: "statshouseApi.fnP5#bcdeae3a"},
	{TLTag: 0x56071d39, TLName: "statshouseApi.fnP10", TLString: "statshouseApi.fnP10#56071d39"},
	{TLTag: 0xcf9ad7bf, TLName: "statshouseApi.fnP25", TLString: "statshouseApi.fnP25#cf9ad7bf"},
	{TLTag: 0x77c5de5c, TLName: "statshouseApi.fnP50", TLString: "statshouseApi.fnP50#77c5de5c"},
	{TLTag: 0x0e674272, TLName: "statshouseApi.fnP75", TLString: "statshouseApi.fnP75#0e674272"},
	{TLTag: 0xd4c8c793, TLName: "statshouseApi.fnP90", TLString: "statshouseApi.fnP90#d4c8c793"},
	{TLTag: 0x9a92b76f, TLName: "statshouseApi.fnP95", TLString: "statshouseApi.fnP95#9a92b76f"},
	{TLTag: 0x71992e9a, TLName: "statshouseApi.fnP99", TLString: "statshouseApi.fnP99#71992e9a"},
	{TLTag: 0xa3434c26, TLName: "statshouseApi.fnP999", TLString: "statshouseApi.fnP999#a3434c26"},
	{TLTag: 0xf20fb854, TLName: "statshouseApi.fnUnique", TLString: "statshouseApi.fnUnique#f20fb854"},
	{TLTag: 0x9ceb6f68, TLName: "statshouseApi.fnUniqueNorm", TLString: "statshouseApi.fnUniqueNorm#9ceb6f68"},
	{TLTag: 0xb4790064, TLName: "statshouseApi.fnMaxHost", TLString: "statshouseApi.fnMaxHost#b4790064"},
	{TLTag: 0x885e665b, TLName: "statshouseApi.fnMaxCountHost", TLString: "statshouseApi.fnMaxCountHost#885e665b"},
	{TLTag: 0x4817df2b, TLName: "statshouseApi.fnDerivativeMin", TLString: "statshouseApi.fnDerivativeMin#4817df2b"},
	{TLTag: 0x43eeb810, TLName: "statshouseApi.fnDerivativeMax", TLString: "statshouseApi.fnDerivativeMax#43eeb810"},
	{TLTag: 0x60d2b603, TLName: "statshouseApi.fnDerivativeAvg", TLString: "statshouseApi.fnDerivativeAvg#60d2b603"},
	{TLTag: 0xe617771c, TLName: "statshouseApi.fnDerivativeCount", TLString: "statshouseApi.fnDerivativeCount#e617771c"},
	{TLTag: 0xbfb5f7fc, TLName: "statshouseApi.fnDerivativeCountNorm", TLString: "statshouseApi.fnDerivativeCountNorm#bfb5f7fc"},
	{TLTag: 0xa3a43781, TLName: "statshouseApi.fnDerivativeSum", TLString: "statshouseApi.fnDerivativeSum#a3a43781"},
	{TLTag: 0x96683390, TLName: "statshouseApi.fnDerivativeSumNorm", TLString: "statshouseApi.fnDerivativeSumNorm#96683390"},
	{TLTag: 0x5745a0a3, TLName: "statshouseApi.fnDerivativeUnique", TLString: "statshouseApi.fnDerivativeUnique#5745a0a3"},
	{TLTag: 0x4bd4f327, TLName: "statshouseApi.fnDerivativeUniqueNorm", TLString: "statshouseApi.fnDerivativeUniqueNorm#4bd4f327"},
}

func StatshouseApiFunction__MakeEnum(i int) StatshouseApiFunction {
	return StatshouseApiFunction{index: i}
}

type StatshouseApiFunction struct {
	index int
}

func (item StatshouseApiFunction) TLName() string { return _StatshouseApiFunction[item.index].TLName }
func (item StatshouseApiFunction) TLTag() uint32  { return _StatshouseApiFunction[item.index].TLTag }

func (item *StatshouseApiFunction) Reset() { item.index = 0 }

func (item *StatshouseApiFunction) IsFnCount() bool { return item.index == 0 }
func (item *StatshouseApiFunction) SetFnCount()     { item.index = 0 }

func (item *StatshouseApiFunction) IsFnCountNorm() bool { return item.index == 1 }
func (item *StatshouseApiFunction) SetFnCountNorm()     { item.index = 1 }

func (item *StatshouseApiFunction) IsFnCumulCount() bool { return item.index == 2 }
func (item *StatshouseApiFunction) SetFnCumulCount()     { item.index = 2 }

func (item *StatshouseApiFunction) IsFnMin() bool { return item.index == 3 }
func (item *StatshouseApiFunction) SetFnMin()     { item.index = 3 }

func (item *StatshouseApiFunction) IsFnMax() bool { return item.index == 4 }
func (item *StatshouseApiFunction) SetFnMax()     { item.index = 4 }

func (item *StatshouseApiFunction) IsFnAvg() bool { return item.index == 5 }
func (item *StatshouseApiFunction) SetFnAvg()     { item.index = 5 }

func (item *StatshouseApiFunction) IsFnCumulAvg() bool { return item.index == 6 }
func (item *StatshouseApiFunction) SetFnCumulAvg()     { item.index = 6 }

func (item *StatshouseApiFunction) IsFnSum() bool { return item.index == 7 }
func (item *StatshouseApiFunction) SetFnSum()     { item.index = 7 }

func (item *StatshouseApiFunction) IsFnSumNorm() bool { return item.index == 8 }
func (item *StatshouseApiFunction) SetFnSumNorm()     { item.index = 8 }

func (item *StatshouseApiFunction) IsFnCumulSum() bool { return item.index == 9 }
func (item *StatshouseApiFunction) SetFnCumulSum()     { item.index = 9 }

func (item *StatshouseApiFunction) IsFnStddev() bool { return item.index == 10 }
func (item *StatshouseApiFunction) SetFnStddev()     { item.index = 10 }

func (item *StatshouseApiFunction) IsFnP01() bool { return item.index == 11 }
func (item *StatshouseApiFunction) SetFnP01()     { item.index = 11 }

func (item *StatshouseApiFunction) IsFnP1() bool { return item.index == 12 }
func (item *StatshouseApiFunction) SetFnP1()     { item.index = 12 }

func (item *StatshouseApiFunction) IsFnP5() bool { return item.index == 13 }
func (item *StatshouseApiFunction) SetFnP5()     { item.index = 13 }

func (item *StatshouseApiFunction) IsFnP10() bool { return item.index == 14 }
func (item *StatshouseApiFunction) SetFnP10()     { item.index = 14 }

func (item *StatshouseApiFunction) IsFnP25() bool { return item.index == 15 }
func (item *StatshouseApiFunction) SetFnP25()     { item.index = 15 }

func (item *StatshouseApiFunction) IsFnP50() bool { return item.index == 16 }
func (item *StatshouseApiFunction) SetFnP50()     { item.index = 16 }

func (item *StatshouseApiFunction) IsFnP75() bool { return item.index == 17 }
func (item *StatshouseApiFunction) SetFnP75()     { item.index = 17 }

func (item *StatshouseApiFunction) IsFnP90() bool { return item.index == 18 }
func (item *StatshouseApiFunction) SetFnP90()     { item.index = 18 }

func (item *StatshouseApiFunction) IsFnP95() bool { return item.index == 19 }
func (item *StatshouseApiFunction) SetFnP95()     { item.index = 19 }

func (item *StatshouseApiFunction) IsFnP99() bool { return item.index == 20 }
func (item *StatshouseApiFunction) SetFnP99()     { item.index = 20 }

func (item *StatshouseApiFunction) IsFnP999() bool { return item.index == 21 }
func (item *StatshouseApiFunction) SetFnP999()     { item.index = 21 }

func (item *StatshouseApiFunction) IsFnUnique() bool { return item.index == 22 }
func (item *StatshouseApiFunction) SetFnUnique()     { item.index = 22 }

func (item *StatshouseApiFunction) IsFnUniqueNorm() bool { return item.index == 23 }
func (item *StatshouseApiFunction) SetFnUniqueNorm()     { item.index = 23 }

func (item *StatshouseApiFunction) IsFnMaxHost() bool { return item.index == 24 }
func (item *StatshouseApiFunction) SetFnMaxHost()     { item.index = 24 }

func (item *StatshouseApiFunction) IsFnMaxCountHost() bool { return item.index == 25 }
func (item *StatshouseApiFunction) SetFnMaxCountHost()     { item.index = 25 }

func (item *StatshouseApiFunction) IsFnDerivativeMin() bool { return item.index == 26 }
func (item *StatshouseApiFunction) SetFnDerivativeMin()     { item.index = 26 }

func (item *StatshouseApiFunction) IsFnDerivativeMax() bool { return item.index == 27 }
func (item *StatshouseApiFunction) SetFnDerivativeMax()     { item.index = 27 }

func (item *StatshouseApiFunction) IsFnDerivativeAvg() bool { return item.index == 28 }
func (item *StatshouseApiFunction) SetFnDerivativeAvg()     { item.index = 28 }

func (item *StatshouseApiFunction) IsFnDerivativeCount() bool { return item.index == 29 }
func (item *StatshouseApiFunction) SetFnDerivativeCount()     { item.index = 29 }

func (item *StatshouseApiFunction) IsFnDerivativeCountNorm() bool { return item.index == 30 }
func (item *StatshouseApiFunction) SetFnDerivativeCountNorm()     { item.index = 30 }

func (item *StatshouseApiFunction) IsFnDerivativeSum() bool { return item.index == 31 }
func (item *StatshouseApiFunction) SetFnDerivativeSum()     { item.index = 31 }

func (item *StatshouseApiFunction) IsFnDerivativeSumNorm() bool { return item.index == 32 }
func (item *StatshouseApiFunction) SetFnDerivativeSumNorm()     { item.index = 32 }

func (item *StatshouseApiFunction) IsFnDerivativeUnique() bool { return item.index == 33 }
func (item *StatshouseApiFunction) SetFnDerivativeUnique()     { item.index = 33 }

func (item *StatshouseApiFunction) IsFnDerivativeUniqueNorm() bool { return item.index == 34 }
func (item *StatshouseApiFunction) SetFnDerivativeUniqueNorm()     { item.index = 34 }

func (item *StatshouseApiFunction) ReadBoxed(w []byte) (_ []byte, err error) {
	var tag uint32
	if w, err = basictl.NatRead(w, &tag); err != nil {
		return w, err
	}
	switch tag {
	case 0x89689775:
		item.index = 0
		return w, nil
	case 0x60e68b5c:
		item.index = 1
		return w, nil
	case 0x871201c4:
		item.index = 2
		return w, nil
	case 0xb4cb2644:
		item.index = 3
		return w, nil
	case 0xf90de384:
		item.index = 4
		return w, nil
	case 0x6323c2f6:
		item.index = 5
		return w, nil
	case 0xf4d9ad09:
		item.index = 6
		return w, nil
	case 0x80ce3cf1:
		item.index = 7
		return w, nil
	case 0x361963d5:
		item.index = 8
		return w, nil
	case 0x42fc39b6:
		item.index = 9
		return w, nil
	case 0x2043e480:
		item.index = 10
		return w, nil
	case 0x381b1cee:
		item.index = 11
		return w, nil
	case 0xbbb36a23:
		item.index = 12
		return w, nil
	case 0xbcdeae3a:
		item.index = 13
		return w, nil
	case 0x56071d39:
		item.index = 14
		return w, nil
	case 0xcf9ad7bf:
		item.index = 15
		return w, nil
	case 0x77c5de5c:
		item.index = 16
		return w, nil
	case 0x0e674272:
		item.index = 17
		return w, nil
	case 0xd4c8c793:
		item.index = 18
		return w, nil
	case 0x9a92b76f:
		item.index = 19
		return w, nil
	case 0x71992e9a:
		item.index = 20
		return w, nil
	case 0xa3434c26:
		item.index = 21
		return w, nil
	case 0xf20fb854:
		item.index = 22
		return w, nil
	case 0x9ceb6f68:
		item.index = 23
		return w, nil
	case 0xb4790064:
		item.index = 24
		return w, nil
	case 0x885e665b:
		item.index = 25
		return w, nil
	case 0x4817df2b:
		item.index = 26
		return w, nil
	case 0x43eeb810:
		item.index = 27
		return w, nil
	case 0x60d2b603:
		item.index = 28
		return w, nil
	case 0xe617771c:
		item.index = 29
		return w, nil
	case 0xbfb5f7fc:
		item.index = 30
		return w, nil
	case 0xa3a43781:
		item.index = 31
		return w, nil
	case 0x96683390:
		item.index = 32
		return w, nil
	case 0x5745a0a3:
		item.index = 33
		return w, nil
	case 0x4bd4f327:
		item.index = 34
		return w, nil
	default:
		return w, ErrorInvalidUnionTag("statshouseApi.Function", tag)
	}
}

// This method is general version of WriteBoxed, use it instead!
func (item *StatshouseApiFunction) WriteBoxedGeneral(w []byte) (_ []byte, err error) {
	return item.WriteBoxed(w), nil
}

func (item StatshouseApiFunction) WriteBoxed(w []byte) []byte {
	w = basictl.NatWrite(w, _StatshouseApiFunction[item.index].TLTag)
	return w
}

func (item *StatshouseApiFunction) ReadJSON(legacyTypeNames bool, in *basictl.JsonLexer) error {
	_jtype := in.UnsafeString()
	if !in.Ok() {
		return ErrorInvalidJSON("statshouseApi.Function", "expected string")
	}
	switch _jtype {
	case "statshouseApi.fnCount#89689775", "statshouseApi.fnCount", "#89689775":
		if !legacyTypeNames && _jtype == "statshouseApi.fnCount#89689775" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnCount#89689775")
		}
		item.index = 0
		return nil
	case "statshouseApi.fnCountNorm#60e68b5c", "statshouseApi.fnCountNorm", "#60e68b5c":
		if !legacyTypeNames && _jtype == "statshouseApi.fnCountNorm#60e68b5c" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnCountNorm#60e68b5c")
		}
		item.index = 1
		return nil
	case "statshouseApi.fnCumulCount#871201c4", "statshouseApi.fnCumulCount", "#871201c4":
		if !legacyTypeNames && _jtype == "statshouseApi.fnCumulCount#871201c4" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnCumulCount#871201c4")
		}
		item.index = 2
		return nil
	case "statshouseApi.fnMin#b4cb2644", "statshouseApi.fnMin", "#b4cb2644":
		if !legacyTypeNames && _jtype == "statshouseApi.fnMin#b4cb2644" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnMin#b4cb2644")
		}
		item.index = 3
		return nil
	case "statshouseApi.fnMax#f90de384", "statshouseApi.fnMax", "#f90de384":
		if !legacyTypeNames && _jtype == "statshouseApi.fnMax#f90de384" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnMax#f90de384")
		}
		item.index = 4
		return nil
	case "statshouseApi.fnAvg#6323c2f6", "statshouseApi.fnAvg", "#6323c2f6":
		if !legacyTypeNames && _jtype == "statshouseApi.fnAvg#6323c2f6" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnAvg#6323c2f6")
		}
		item.index = 5
		return nil
	case "statshouseApi.fnCumulAvg#f4d9ad09", "statshouseApi.fnCumulAvg", "#f4d9ad09":
		if !legacyTypeNames && _jtype == "statshouseApi.fnCumulAvg#f4d9ad09" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnCumulAvg#f4d9ad09")
		}
		item.index = 6
		return nil
	case "statshouseApi.fnSum#80ce3cf1", "statshouseApi.fnSum", "#80ce3cf1":
		if !legacyTypeNames && _jtype == "statshouseApi.fnSum#80ce3cf1" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnSum#80ce3cf1")
		}
		item.index = 7
		return nil
	case "statshouseApi.fnSumNorm#361963d5", "statshouseApi.fnSumNorm", "#361963d5":
		if !legacyTypeNames && _jtype == "statshouseApi.fnSumNorm#361963d5" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnSumNorm#361963d5")
		}
		item.index = 8
		return nil
	case "statshouseApi.fnCumulSum#42fc39b6", "statshouseApi.fnCumulSum", "#42fc39b6":
		if !legacyTypeNames && _jtype == "statshouseApi.fnCumulSum#42fc39b6" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnCumulSum#42fc39b6")
		}
		item.index = 9
		return nil
	case "statshouseApi.fnStddev#2043e480", "statshouseApi.fnStddev", "#2043e480":
		if !legacyTypeNames && _jtype == "statshouseApi.fnStddev#2043e480" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnStddev#2043e480")
		}
		item.index = 10
		return nil
	case "statshouseApi.fnP01#381b1cee", "statshouseApi.fnP01", "#381b1cee":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP01#381b1cee" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP01#381b1cee")
		}
		item.index = 11
		return nil
	case "statshouseApi.fnP1#bbb36a23", "statshouseApi.fnP1", "#bbb36a23":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP1#bbb36a23" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP1#bbb36a23")
		}
		item.index = 12
		return nil
	case "statshouseApi.fnP5#bcdeae3a", "statshouseApi.fnP5", "#bcdeae3a":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP5#bcdeae3a" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP5#bcdeae3a")
		}
		item.index = 13
		return nil
	case "statshouseApi.fnP10#56071d39", "statshouseApi.fnP10", "#56071d39":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP10#56071d39" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP10#56071d39")
		}
		item.index = 14
		return nil
	case "statshouseApi.fnP25#cf9ad7bf", "statshouseApi.fnP25", "#cf9ad7bf":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP25#cf9ad7bf" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP25#cf9ad7bf")
		}
		item.index = 15
		return nil
	case "statshouseApi.fnP50#77c5de5c", "statshouseApi.fnP50", "#77c5de5c":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP50#77c5de5c" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP50#77c5de5c")
		}
		item.index = 16
		return nil
	case "statshouseApi.fnP75#0e674272", "statshouseApi.fnP75", "#0e674272":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP75#0e674272" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP75#0e674272")
		}
		item.index = 17
		return nil
	case "statshouseApi.fnP90#d4c8c793", "statshouseApi.fnP90", "#d4c8c793":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP90#d4c8c793" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP90#d4c8c793")
		}
		item.index = 18
		return nil
	case "statshouseApi.fnP95#9a92b76f", "statshouseApi.fnP95", "#9a92b76f":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP95#9a92b76f" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP95#9a92b76f")
		}
		item.index = 19
		return nil
	case "statshouseApi.fnP99#71992e9a", "statshouseApi.fnP99", "#71992e9a":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP99#71992e9a" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP99#71992e9a")
		}
		item.index = 20
		return nil
	case "statshouseApi.fnP999#a3434c26", "statshouseApi.fnP999", "#a3434c26":
		if !legacyTypeNames && _jtype == "statshouseApi.fnP999#a3434c26" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnP999#a3434c26")
		}
		item.index = 21
		return nil
	case "statshouseApi.fnUnique#f20fb854", "statshouseApi.fnUnique", "#f20fb854":
		if !legacyTypeNames && _jtype == "statshouseApi.fnUnique#f20fb854" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnUnique#f20fb854")
		}
		item.index = 22
		return nil
	case "statshouseApi.fnUniqueNorm#9ceb6f68", "statshouseApi.fnUniqueNorm", "#9ceb6f68":
		if !legacyTypeNames && _jtype == "statshouseApi.fnUniqueNorm#9ceb6f68" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnUniqueNorm#9ceb6f68")
		}
		item.index = 23
		return nil
	case "statshouseApi.fnMaxHost#b4790064", "statshouseApi.fnMaxHost", "#b4790064":
		if !legacyTypeNames && _jtype == "statshouseApi.fnMaxHost#b4790064" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnMaxHost#b4790064")
		}
		item.index = 24
		return nil
	case "statshouseApi.fnMaxCountHost#885e665b", "statshouseApi.fnMaxCountHost", "#885e665b":
		if !legacyTypeNames && _jtype == "statshouseApi.fnMaxCountHost#885e665b" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnMaxCountHost#885e665b")
		}
		item.index = 25
		return nil
	case "statshouseApi.fnDerivativeMin#4817df2b", "statshouseApi.fnDerivativeMin", "#4817df2b":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeMin#4817df2b" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeMin#4817df2b")
		}
		item.index = 26
		return nil
	case "statshouseApi.fnDerivativeMax#43eeb810", "statshouseApi.fnDerivativeMax", "#43eeb810":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeMax#43eeb810" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeMax#43eeb810")
		}
		item.index = 27
		return nil
	case "statshouseApi.fnDerivativeAvg#60d2b603", "statshouseApi.fnDerivativeAvg", "#60d2b603":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeAvg#60d2b603" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeAvg#60d2b603")
		}
		item.index = 28
		return nil
	case "statshouseApi.fnDerivativeCount#e617771c", "statshouseApi.fnDerivativeCount", "#e617771c":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeCount#e617771c" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeCount#e617771c")
		}
		item.index = 29
		return nil
	case "statshouseApi.fnDerivativeCountNorm#bfb5f7fc", "statshouseApi.fnDerivativeCountNorm", "#bfb5f7fc":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeCountNorm#bfb5f7fc" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeCountNorm#bfb5f7fc")
		}
		item.index = 30
		return nil
	case "statshouseApi.fnDerivativeSum#a3a43781", "statshouseApi.fnDerivativeSum", "#a3a43781":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeSum#a3a43781" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeSum#a3a43781")
		}
		item.index = 31
		return nil
	case "statshouseApi.fnDerivativeSumNorm#96683390", "statshouseApi.fnDerivativeSumNorm", "#96683390":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeSumNorm#96683390" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeSumNorm#96683390")
		}
		item.index = 32
		return nil
	case "statshouseApi.fnDerivativeUnique#5745a0a3", "statshouseApi.fnDerivativeUnique", "#5745a0a3":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeUnique#5745a0a3" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeUnique#5745a0a3")
		}
		item.index = 33
		return nil
	case "statshouseApi.fnDerivativeUniqueNorm#4bd4f327", "statshouseApi.fnDerivativeUniqueNorm", "#4bd4f327":
		if !legacyTypeNames && _jtype == "statshouseApi.fnDerivativeUniqueNorm#4bd4f327" {
			return ErrorInvalidUnionLegacyTagJSON("statshouseApi.Function", "statshouseApi.fnDerivativeUniqueNorm#4bd4f327")
		}
		item.index = 34
		return nil
	default:
		return ErrorInvalidEnumTagJSON("statshouseApi.Function", _jtype)
	}
}

// This method is general version of WriteJSON, use it instead!
func (item StatshouseApiFunction) WriteJSONGeneral(w []byte) ([]byte, error) {
	return item.WriteJSONOpt(true, false, w), nil
}

func (item StatshouseApiFunction) WriteJSON(w []byte) []byte {
	return item.WriteJSONOpt(true, false, w)
}
func (item StatshouseApiFunction) WriteJSONOpt(newTypeNames bool, short bool, w []byte) []byte {
	w = append(w, '"')
	if newTypeNames {
		w = append(w, _StatshouseApiFunction[item.index].TLName...)
	} else {
		w = append(w, _StatshouseApiFunction[item.index].TLString...)
	}
	return append(w, '"')
}

func (item StatshouseApiFunction) String() string {
	return string(item.WriteJSON(nil))
}

func (item *StatshouseApiFunction) MarshalJSON() ([]byte, error) {
	return item.WriteJSON(nil), nil
}

func (item *StatshouseApiFunction) UnmarshalJSON(b []byte) error {
	if err := item.ReadJSON(true, &basictl.JsonLexer{Data: b}); err != nil {
		return ErrorInvalidJSON("statshouseApi.Function", err.Error())
	}
	return nil
}
