// Copyright 2022 V Kontakte LLC
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
package internal

import (
	"github.com/vkcom/statshouse/internal/vkgo/basictl"
)

var _ = basictl.NatWrite

type RpcServerWantsFin struct {
}

func (RpcServerWantsFin) TLName() string { return "rpcServerWantsFin" }
func (RpcServerWantsFin) TLTag() uint32  { return 0xa8ddbc46 }

func (item *RpcServerWantsFin) Reset()                         {}
func (item *RpcServerWantsFin) Read(w []byte) ([]byte, error)  { return w, nil }
func (item *RpcServerWantsFin) Write(w []byte) ([]byte, error) { return w, nil }
func (item *RpcServerWantsFin) ReadBoxed(w []byte) ([]byte, error) {
	return basictl.NatReadExactTag(w, 0xa8ddbc46)
}
func (item *RpcServerWantsFin) WriteBoxed(w []byte) ([]byte, error) {
	return basictl.NatWrite(w, 0xa8ddbc46), nil
}

func (item RpcServerWantsFin) String() string {
	w, err := item.WriteJSON(nil)
	if err != nil {
		return err.Error()
	}
	return string(w)
}

func RpcServerWantsFin__ReadJSON(item *RpcServerWantsFin, j interface{}) error {
	return item.readJSON(j)
}
func (item *RpcServerWantsFin) readJSON(j interface{}) error {
	_jm, _ok := j.(map[string]interface{})
	if j != nil && !_ok {
		return ErrorInvalidJSON("rpcServerWantsFin", "expected json object")
	}
	for k := range _jm {
		return ErrorInvalidJSONExcessElement("rpcServerWantsFin", k)
	}
	return nil
}

func (item *RpcServerWantsFin) WriteJSON(w []byte) (_ []byte, err error) {
	w = append(w, '{')
	return append(w, '}'), nil
}

func (item *RpcServerWantsFin) MarshalJSON() ([]byte, error) {
	return item.WriteJSON(nil)
}

func (item *RpcServerWantsFin) UnmarshalJSON(b []byte) error {
	j, err := JsonBytesToInterface(b)
	if err != nil {
		return ErrorInvalidJSON("rpcServerWantsFin", err.Error())
	}
	if err = item.readJSON(j); err != nil {
		return ErrorInvalidJSON("rpcServerWantsFin", err.Error())
	}
	return nil
}
