-- Autogenerated with:
-- go run ./cmd/ch-table-gen/ | clickhouse format --multiquery

CREATE TABLE IF NOT EXISTS statshouse_v3_incoming ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `min_host_legacy` AggregateFunction(argMin, Int32, Float32),
    `max_host_legacy` AggregateFunction(argMax, Int32, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = Null
;

CREATE TABLE IF NOT EXISTS statshouse_v3_1s_dist ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = Distributed('statlogs2', 'default', 'statshouse_v3_1s')
;

CREATE TABLE IF NOT EXISTS statshouse_v3_1s ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{shard}/{table}', '{replica}')
PARTITION BY toStartOfInterval(time, toIntervalHour(24))
ORDER BY (index_type, metric, pre_tag, pre_stag, time, tag0, stag0, tag1, stag1, tag2, stag2, tag3, stag3, tag4, stag4, tag5, stag5, tag6, stag6, tag7, stag7, tag8, stag8, tag9, stag9, tag10, stag10, tag11, stag11, tag12, stag12, tag13, stag13, tag14, stag14, tag15, stag15, tag16, stag16, tag17, stag17, tag18, stag18, tag19, stag19, tag20, stag20, tag21, stag21, tag22, stag22, tag23, stag23, tag24, stag24, tag25, stag25, tag26, stag26, tag27, stag27, tag28, stag28, tag29, stag29, tag30, stag30, tag31, stag31, tag32, stag32, tag33, stag33, tag34, stag34, tag35, stag35, tag36, stag36, tag37, stag37, tag38, stag38, tag39, stag39, tag40, stag40, tag41, stag41, tag42, stag42, tag43, stag43, tag44, stag44, tag45, stag45, tag46, stag46, tag47, stag47)
TTL time + toIntervalHour(52)
SETTINGS ttl_only_drop_parts = 1, max_bytes_to_merge_at_max_space_in_pool = 16106127360, index_granularity = 8192, storage_policy = 'ssd_then_hdd'
;

CREATE MATERIALIZED VIEW IF NOT EXISTS statshouse_v3_1s_matview ON CLUSTER statlogs2 TO statshouse_v3_1s
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
AS SELECT
    index_type,
    metric,
    pre_tag,
    pre_stag,
    time,
    tag0,
    stag0,
    tag1,
    stag1,
    tag2,
    stag2,
    tag3,
    stag3,
    tag4,
    stag4,
    tag5,
    stag5,
    tag6,
    stag6,
    tag7,
    stag7,
    tag8,
    stag8,
    tag9,
    stag9,
    tag10,
    stag10,
    tag11,
    stag11,
    tag12,
    stag12,
    tag13,
    stag13,
    tag14,
    stag14,
    tag15,
    stag15,
    tag16,
    stag16,
    tag17,
    stag17,
    tag18,
    stag18,
    tag19,
    stag19,
    tag20,
    stag20,
    tag21,
    stag21,
    tag22,
    stag22,
    tag23,
    stag23,
    tag24,
    stag24,
    tag25,
    stag25,
    tag26,
    stag26,
    tag27,
    stag27,
    tag28,
    stag28,
    tag29,
    stag29,
    tag30,
    stag30,
    tag31,
    stag31,
    tag32,
    stag32,
    tag33,
    stag33,
    tag34,
    stag34,
    tag35,
    stag35,
    tag36,
    stag36,
    tag37,
    stag37,
    tag38,
    stag38,
    tag39,
    stag39,
    tag40,
    stag40,
    tag41,
    stag41,
    tag42,
    stag42,
    tag43,
    stag43,
    tag44,
    stag44,
    tag45,
    stag45,
    tag46,
    stag46,
    tag47,
    stag47,
    count,
    min,
    max,
    max_count,
    sum,
    sumsquare,
    min_host,
    max_host,
    max_count_host,
    percentiles,
    uniq_state
FROM statshouse_v3_incoming
WHERE (toDate(time) >= (today() - 3)) AND (toDate(time) <= (today() + 1))
;

CREATE TABLE IF NOT EXISTS statshouse_v3_1m_dist ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = Distributed('statlogs2', 'default', 'statshouse_v3_1m')
;

CREATE TABLE IF NOT EXISTS statshouse_v3_1m ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{shard}/{table}', '{replica}')
PARTITION BY toDate(time)
ORDER BY (index_type, metric, pre_tag, pre_stag, time, tag0, stag0, tag1, stag1, tag2, stag2, tag3, stag3, tag4, stag4, tag5, stag5, tag6, stag6, tag7, stag7, tag8, stag8, tag9, stag9, tag10, stag10, tag11, stag11, tag12, stag12, tag13, stag13, tag14, stag14, tag15, stag15, tag16, stag16, tag17, stag17, tag18, stag18, tag19, stag19, tag20, stag20, tag21, stag21, tag22, stag22, tag23, stag23, tag24, stag24, tag25, stag25, tag26, stag26, tag27, stag27, tag28, stag28, tag29, stag29, tag30, stag30, tag31, stag31, tag32, stag32, tag33, stag33, tag34, stag34, tag35, stag35, tag36, stag36, tag37, stag37, tag38, stag38, tag39, stag39, tag40, stag40, tag41, stag41, tag42, stag42, tag43, stag43, tag44, stag44, tag45, stag45, tag46, stag46, tag47, stag47)
TTL time + toIntervalDay(4) TO DISK 'default', time + toIntervalDay(33)
SETTINGS index_granularity = 8192, ttl_only_drop_parts = 1, storage_policy = 'ssd_then_hdd'
;

CREATE MATERIALIZED VIEW IF NOT EXISTS statshouse_v3_1m_matview ON CLUSTER statlogs2 TO statshouse_v3_1m
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
AS SELECT
    index_type,
    metric,
    pre_tag,
    pre_stag,
    toStartOfInterval(time, toIntervalMinute(1)) AS time,
    tag0,
    stag0,
    tag1,
    stag1,
    tag2,
    stag2,
    tag3,
    stag3,
    tag4,
    stag4,
    tag5,
    stag5,
    tag6,
    stag6,
    tag7,
    stag7,
    tag8,
    stag8,
    tag9,
    stag9,
    tag10,
    stag10,
    tag11,
    stag11,
    tag12,
    stag12,
    tag13,
    stag13,
    tag14,
    stag14,
    tag15,
    stag15,
    tag16,
    stag16,
    tag17,
    stag17,
    tag18,
    stag18,
    tag19,
    stag19,
    tag20,
    stag20,
    tag21,
    stag21,
    tag22,
    stag22,
    tag23,
    stag23,
    tag24,
    stag24,
    tag25,
    stag25,
    tag26,
    stag26,
    tag27,
    stag27,
    tag28,
    stag28,
    tag29,
    stag29,
    tag30,
    stag30,
    tag31,
    stag31,
    tag32,
    stag32,
    tag33,
    stag33,
    tag34,
    stag34,
    tag35,
    stag35,
    tag36,
    stag36,
    tag37,
    stag37,
    tag38,
    stag38,
    tag39,
    stag39,
    tag40,
    stag40,
    tag41,
    stag41,
    tag42,
    stag42,
    tag43,
    stag43,
    tag44,
    stag44,
    tag45,
    stag45,
    tag46,
    stag46,
    tag47,
    stag47,
    count,
    min,
    max,
    max_count,
    sum,
    sumsquare,
    min_host,
    max_host,
    max_count_host,
    percentiles,
    uniq_state
FROM statshouse_v3_incoming
WHERE (toDate(time) >= (today() - 3)) AND (toDate(time) <= (today() + 1))
;

CREATE TABLE IF NOT EXISTS statshouse_v3_1h_dist ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = Distributed('statlogs2', 'default', 'statshouse_v3_1h')
;

CREATE TABLE IF NOT EXISTS statshouse_v3_1h ON CLUSTER statlogs2
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{shard}/{table}', '{replica}')
PARTITION BY toYYYYMM(time)
ORDER BY (index_type, metric, pre_tag, pre_stag, time, tag0, stag0, tag1, stag1, tag2, stag2, tag3, stag3, tag4, stag4, tag5, stag5, tag6, stag6, tag7, stag7, tag8, stag8, tag9, stag9, tag10, stag10, tag11, stag11, tag12, stag12, tag13, stag13, tag14, stag14, tag15, stag15, tag16, stag16, tag17, stag17, tag18, stag18, tag19, stag19, tag20, stag20, tag21, stag21, tag22, stag22, tag23, stag23, tag24, stag24, tag25, stag25, tag26, stag26, tag27, stag27, tag28, stag28, tag29, stag29, tag30, stag30, tag31, stag31, tag32, stag32, tag33, stag33, tag34, stag34, tag35, stag35, tag36, stag36, tag37, stag37, tag38, stag38, tag39, stag39, tag40, stag40, tag41, stag41, tag42, stag42, tag43, stag43, tag44, stag44, tag45, stag45, tag46, stag46, tag47, stag47)
TTL time + toIntervalDay(4) TO DISK 'default'
SETTINGS index_granularity = 8192, ttl_only_drop_parts = 1, storage_policy = 'ssd_then_hdd'
;

CREATE MATERIALIZED VIEW IF NOT EXISTS statshouse_v3_1h_matview ON CLUSTER statlogs2 TO statshouse_v3_1h
(
    `index_type` UInt8,
    `metric` Int32,
    `pre_tag` UInt32,
    `pre_stag` String,
    `time` DateTime,
    `tag0` Int32,
    `stag0` String,
    `tag1` Int32,
    `stag1` String,
    `tag2` Int32,
    `stag2` String,
    `tag3` Int32,
    `stag3` String,
    `tag4` Int32,
    `stag4` String,
    `tag5` Int32,
    `stag5` String,
    `tag6` Int32,
    `stag6` String,
    `tag7` Int32,
    `stag7` String,
    `tag8` Int32,
    `stag8` String,
    `tag9` Int32,
    `stag9` String,
    `tag10` Int32,
    `stag10` String,
    `tag11` Int32,
    `stag11` String,
    `tag12` Int32,
    `stag12` String,
    `tag13` Int32,
    `stag13` String,
    `tag14` Int32,
    `stag14` String,
    `tag15` Int32,
    `stag15` String,
    `tag16` Int32,
    `stag16` String,
    `tag17` Int32,
    `stag17` String,
    `tag18` Int32,
    `stag18` String,
    `tag19` Int32,
    `stag19` String,
    `tag20` Int32,
    `stag20` String,
    `tag21` Int32,
    `stag21` String,
    `tag22` Int32,
    `stag22` String,
    `tag23` Int32,
    `stag23` String,
    `tag24` Int32,
    `stag24` String,
    `tag25` Int32,
    `stag25` String,
    `tag26` Int32,
    `stag26` String,
    `tag27` Int32,
    `stag27` String,
    `tag28` Int32,
    `stag28` String,
    `tag29` Int32,
    `stag29` String,
    `tag30` Int32,
    `stag30` String,
    `tag31` Int32,
    `stag31` String,
    `tag32` Int32,
    `stag32` String,
    `tag33` Int32,
    `stag33` String,
    `tag34` Int32,
    `stag34` String,
    `tag35` Int32,
    `stag35` String,
    `tag36` Int32,
    `stag36` String,
    `tag37` Int32,
    `stag37` String,
    `tag38` Int32,
    `stag38` String,
    `tag39` Int32,
    `stag39` String,
    `tag40` Int32,
    `stag40` String,
    `tag41` Int32,
    `stag41` String,
    `tag42` Int32,
    `stag42` String,
    `tag43` Int32,
    `stag43` String,
    `tag44` Int32,
    `stag44` String,
    `tag45` Int32,
    `stag45` String,
    `tag46` Int32,
    `stag46` String,
    `tag47` Int32,
    `stag47` String,
    `count` SimpleAggregateFunction(sum, Float64),
    `min` SimpleAggregateFunction(min, Float64),
    `max` SimpleAggregateFunction(max, Float64),
    `max_count` SimpleAggregateFunction(max, Float64),
    `sum` SimpleAggregateFunction(sum, Float64),
    `sumsquare` SimpleAggregateFunction(sum, Float64),
    `min_host` AggregateFunction(argMin, String, Float32),
    `max_host` AggregateFunction(argMax, String, Float32),
    `max_count_host` AggregateFunction(argMax, String, Float32),
    `percentiles` AggregateFunction(quantilesTDigest(0.5), Float32),
    `uniq_state` AggregateFunction(uniq, Int64)
)
AS SELECT
    index_type,
    metric,
    pre_tag,
    pre_stag,
    toStartOfInterval(time, toIntervalHour(1)) AS time,
    tag0,
    stag0,
    tag1,
    stag1,
    tag2,
    stag2,
    tag3,
    stag3,
    tag4,
    stag4,
    tag5,
    stag5,
    tag6,
    stag6,
    tag7,
    stag7,
    tag8,
    stag8,
    tag9,
    stag9,
    tag10,
    stag10,
    tag11,
    stag11,
    tag12,
    stag12,
    tag13,
    stag13,
    tag14,
    stag14,
    tag15,
    stag15,
    tag16,
    stag16,
    tag17,
    stag17,
    tag18,
    stag18,
    tag19,
    stag19,
    tag20,
    stag20,
    tag21,
    stag21,
    tag22,
    stag22,
    tag23,
    stag23,
    tag24,
    stag24,
    tag25,
    stag25,
    tag26,
    stag26,
    tag27,
    stag27,
    tag28,
    stag28,
    tag29,
    stag29,
    tag30,
    stag30,
    tag31,
    stag31,
    tag32,
    stag32,
    tag33,
    stag33,
    tag34,
    stag34,
    tag35,
    stag35,
    tag36,
    stag36,
    tag37,
    stag37,
    tag38,
    stag38,
    tag39,
    stag39,
    tag40,
    stag40,
    tag41,
    stag41,
    tag42,
    stag42,
    tag43,
    stag43,
    tag44,
    stag44,
    tag45,
    stag45,
    tag46,
    stag46,
    tag47,
    stag47,
    count,
    min,
    max,
    max_count,
    sum,
    sumsquare,
    min_host,
    max_host,
    max_count_host,
    percentiles,
    uniq_state
FROM statshouse_v3_incoming
WHERE (toDate(time) >= (today() - 3)) AND (toDate(time) <= (today() + 1))
;


